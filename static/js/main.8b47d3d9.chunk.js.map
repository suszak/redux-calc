{"version":3,"sources":["helpers/calculateResult.js","component/button/button.js","actions/calculatorActions.js","containers/keyboard/keyboardArray.js","containers/keyboard/keyboard.js","containers/display/display.js","helpers/formatBigDisplay.js","App.js","serviceWorker.js","helpers/verifyNumberOnChange.js","helpers/convertStringToNumber.js","helpers/createNewSmallDisplayObject.js","helpers/deleteLastCharacter.js","helpers/convertNumberToString.js","helpers/changeSign.js","helpers/calculatePower.js","helpers/calculateSquareRoot.js","helpers/divideOneByX.js","helpers/calculatePercent.js","reducers/index.js","reducers/calculatorReducer.js","store.js","index.js"],"names":["calculateResult","operationsArray","length","error","string","changedSignsArray","join","replace","split","arrayOfNumbers","filter","element","isNaN","arrayOfSigns","slice","parseFloat","result","reduce","prev","current","index","eval","Button","value","onclick","calculator","useSelector","state","dispatch","useDispatch","buttonsToDisableArray","className","isError","indexOf","onClick","bigDisplayValueChanged","number","type","payload","operationDone","operation","keyboard","function","calculatorActions","Keyboard","callBasicFunctionsOnKeyPress","e","preventDefault","keyCode","useEffect","document","addEventListener","removeEventListener","map","button","key","Display","smallDisplayString","smallDisplayValuesArrayOfStrings","bigDisplayString","App","Boolean","window","location","hostname","match","verifyNumberOnChange","isEqualSignUsed","newNumber","convertStringToNumber","createNewSmallDisplayObject","lastNumberAndOperationString","isSignChanged","deleteLastCharacterFromBigDisplay","deleteSmallDisplay","smallDisplayArray","convertNumberToString","changeSign","bigArray","smallArray","array","calculatePower","bigString","Math","pow","temp","calculateSquareRoot","sqrt","divideOneByX","calculatePercent","bigDisplayNumber","lastFromSmallArrayNumber","calculatedString","prevResult","rootReducer","combineReducers","action","newSmallDisplayValuesObjectArrayWithError","calculatedResultAndErrorObject","calculatedPowerObject","calculatedSquareRootObject","oneByXDividedObject","percentCalculatedObject","deleteLastCharacter","signChangedObject","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8b47d3d9.chunk.js","sourcesContent":["export const calculateResult = (operationsArray) => {\r\n  if (operationsArray.length < 1) {\r\n    return {\r\n      error: false,\r\n      string: \"0\",\r\n    };\r\n  } else {\r\n    const changedSignsArray = operationsArray\r\n      .join(\" \")\r\n      .replace(/,/g, \".\")\r\n      .replace(/×/g, \"*\")\r\n      .replace(/÷/g, \"/\")\r\n      .replace(/- -/g, \"+ \")\r\n      .split(\" \");\r\n\r\n    const arrayOfNumbers = changedSignsArray.filter(\r\n      (element) => !isNaN(element)\r\n    );\r\n    const arrayOfSigns = changedSignsArray.filter((element) => isNaN(element));\r\n\r\n    if (\r\n      arrayOfSigns.slice(-2, -1).join(\"\") === \"/\" &&\r\n      parseFloat(arrayOfNumbers.slice(-1)) === 0\r\n    ) {\r\n      if (parseFloat(arrayOfNumbers.slice(-2, -1)) === 0) {\r\n        return { error: true, string: \"Undefined result\" };\r\n      } else {\r\n        return { error: true, string: \"Do not divide by zero\" };\r\n      }\r\n    } else {\r\n      const result =\r\n        \"\" +\r\n        arrayOfNumbers.reduce((prev, current, index) => {\r\n          // eslint-disable-next-line no-eval\r\n          return eval(\"\" + prev + arrayOfSigns[index - 1] + current);\r\n        });\r\n\r\n      return {\r\n        error: false,\r\n        string: result.replace(\".\", \",\"),\r\n      };\r\n    }\r\n  }\r\n  // }\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./button.css\";\r\n\r\nconst Button = ({ value, onclick }) => {\r\n  const calculator = useSelector((state) => state.calculator);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const buttonsToDisableArray = [\r\n    \"%\",\r\n    \"+/-\",\r\n    \",\",\r\n    \"+\",\r\n    \"-\",\r\n    \"×\",\r\n    \"÷\",\r\n    \"x²\",\r\n    \"√x\",\r\n    \"1/x\",\r\n  ];\r\n\r\n  return (\r\n    <button\r\n      className={\r\n        isNaN(value)\r\n          ? value !== \"=\"\r\n            ? calculator.isError && buttonsToDisableArray.indexOf(value) !== -1\r\n              ? \"button operation disabled\"\r\n              : \"button operation\"\r\n            : \"button result\"\r\n          : \"button\"\r\n      }\r\n      onClick={\r\n        calculator.isError && buttonsToDisableArray.indexOf(value) !== -1\r\n          ? () => {}\r\n          : () => dispatch(onclick)\r\n      }\r\n    >\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export const bigDisplayValueChanged = (number) => ({\r\n  type: \"bigDisplayValueChanged\",\r\n  payload: {\r\n    number,\r\n  },\r\n});\r\n\r\nexport const bigDisplayStringCleared = () => ({\r\n  type: \"bigDisplayStringCleared\",\r\n});\r\n\r\nexport const allCleared = () => ({\r\n  type: \"allCleared\",\r\n});\r\n\r\nexport const operationDone = (operation) => ({\r\n  type: \"operationDone\",\r\n  payload: {\r\n    operation,\r\n  },\r\n});\r\n\r\nexport const lastCharacterDeleted = () => ({\r\n  type: \"lastCharacterDeleted\",\r\n});\r\n\r\nexport const signChanged = () => ({\r\n  type: \"signChanged\",\r\n});\r\n\r\nexport const powerCalculated = () => ({\r\n  type: \"powerCalculated\",\r\n});\r\n\r\nexport const squareRootCalculated = () => ({\r\n  type: \"squareRootCalculated\",\r\n});\r\n\r\nexport const oneByXDivided = () => ({\r\n  type: \"oneByXDivided\",\r\n});\r\n\r\nexport const percentCalculated = () => ({\r\n  type: \"percentCalculated\",\r\n});\r\n","import * as calculatorActions from \"../../actions/calculatorActions\";\r\n\r\nexport const keyboard = [\r\n  {\r\n    value: \"%\",\r\n    function: calculatorActions.percentCalculated(),\r\n  },\r\n  {\r\n    value: \"CE\",\r\n    function: calculatorActions.bigDisplayStringCleared(),\r\n  },\r\n  {\r\n    value: \"C\",\r\n    function: calculatorActions.allCleared(),\r\n  },\r\n  {\r\n    value: \"⊲\",\r\n    function: calculatorActions.lastCharacterDeleted(),\r\n  },\r\n  {\r\n    value: \"1/x\",\r\n    function: calculatorActions.oneByXDivided(),\r\n  },\r\n  {\r\n    value: \"x²\",\r\n    function: calculatorActions.powerCalculated(),\r\n  },\r\n  {\r\n    value: \"√x\",\r\n    function: calculatorActions.squareRootCalculated(),\r\n  },\r\n  {\r\n    value: \"÷\",\r\n    function: calculatorActions.operationDone(\"÷\"),\r\n  },\r\n  {\r\n    value: \"7\",\r\n    function: calculatorActions.bigDisplayValueChanged(7),\r\n  },\r\n  {\r\n    value: \"8\",\r\n    function: calculatorActions.bigDisplayValueChanged(8),\r\n  },\r\n  {\r\n    value: \"9\",\r\n    function: calculatorActions.bigDisplayValueChanged(9),\r\n  },\r\n  {\r\n    value: \"×\",\r\n    function: calculatorActions.operationDone(\"×\"),\r\n  },\r\n  {\r\n    value: \"4\",\r\n    function: calculatorActions.bigDisplayValueChanged(4),\r\n  },\r\n  {\r\n    value: \"5\",\r\n    function: calculatorActions.bigDisplayValueChanged(5),\r\n  },\r\n  {\r\n    value: \"6\",\r\n    function: calculatorActions.bigDisplayValueChanged(6),\r\n  },\r\n  {\r\n    value: \"-\",\r\n    function: calculatorActions.operationDone(\"-\"),\r\n  },\r\n  {\r\n    value: \"1\",\r\n    function: calculatorActions.bigDisplayValueChanged(1),\r\n  },\r\n  {\r\n    value: \"2\",\r\n    function: calculatorActions.bigDisplayValueChanged(2),\r\n  },\r\n  {\r\n    value: \"3\",\r\n    function: calculatorActions.bigDisplayValueChanged(3),\r\n  },\r\n  {\r\n    value: \"+\",\r\n    function: calculatorActions.operationDone(\"+\"),\r\n  },\r\n  {\r\n    value: \"+/-\",\r\n    function: calculatorActions.signChanged(),\r\n  },\r\n  {\r\n    value: \"0\",\r\n    function: calculatorActions.bigDisplayValueChanged(0),\r\n  },\r\n  {\r\n    value: \",\",\r\n    function: calculatorActions.bigDisplayValueChanged(\",\"),\r\n  },\r\n  {\r\n    value: \"=\",\r\n    function: calculatorActions.operationDone(\"=\"),\r\n  },\r\n];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport \"./keyboard.css\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Button from \"../../component/button/button\";\r\nimport * as calculatorActions from \"../../actions/calculatorActions\";\r\nimport { keyboard } from \"./keyboardArray\";\r\n\r\nconst Keyboard = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const callBasicFunctionsOnKeyPress = (e) => {\r\n    e.preventDefault();\r\n    switch (e.keyCode) {\r\n      //    1\r\n      case 49:\r\n        dispatch(calculatorActions.bigDisplayValueChanged(1));\r\n        break;\r\n      //    2\r\n      case 50:\r\n        dispatch(calculatorActions.bigDisplayValueChanged(2));\r\n        break;\r\n      //    3\r\n      case 51:\r\n        dispatch(calculatorActions.bigDisplayValueChanged(3));\r\n        break;\r\n      //    4\r\n      case 52:\r\n        dispatch(calculatorActions.bigDisplayValueChanged(4));\r\n        break;\r\n      //    5\r\n      case 53:\r\n        dispatch(calculatorActions.bigDisplayValueChanged(5));\r\n        break;\r\n      //    6\r\n      case 54:\r\n        dispatch(calculatorActions.bigDisplayValueChanged(6));\r\n        break;\r\n      //    7\r\n      case 55:\r\n        dispatch(calculatorActions.bigDisplayValueChanged(7));\r\n        break;\r\n      //    8\r\n      case 56:\r\n        dispatch(calculatorActions.bigDisplayValueChanged(8));\r\n        break;\r\n      //    9\r\n      case 57:\r\n        dispatch(calculatorActions.bigDisplayValueChanged(9));\r\n        break;\r\n      //    0\r\n      case 48:\r\n        dispatch(calculatorActions.bigDisplayValueChanged(0));\r\n        break;\r\n      //    ,\r\n      case 44:\r\n        dispatch(calculatorActions.bigDisplayValueChanged(\",\"));\r\n        break;\r\n      //    +\r\n      case 43:\r\n        dispatch(calculatorActions.operationDone(\"+\"));\r\n        break;\r\n      //    -\r\n      case 45:\r\n        dispatch(calculatorActions.operationDone(\"-\"));\r\n        break;\r\n      //    *\r\n      case 42:\r\n        dispatch(calculatorActions.operationDone(\"×\"));\r\n        break;\r\n      //    /\r\n      case 47:\r\n        dispatch(calculatorActions.operationDone(\"÷\"));\r\n        break;\r\n\r\n      //    enter\r\n      case 13:\r\n        dispatch(calculatorActions.operationDone(\"=\"));\r\n        break;\r\n      //    =\r\n      case 61:\r\n        dispatch(calculatorActions.operationDone(\"=\"));\r\n        break;\r\n      //    backspace\r\n      case 8:\r\n        dispatch(calculatorActions.lastCharacterDeleted());\r\n        break;\r\n      //    esc (C)\r\n      case 27:\r\n        dispatch(calculatorActions.allCleared());\r\n        break;\r\n      //    delete (CE)\r\n      case 46:\r\n        dispatch(calculatorActions.bigDisplayStringCleared());\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keypress\", (e) =>\r\n      callBasicFunctionsOnKeyPress(e)\r\n    );\r\n    return document.removeEventListener(\"keypress\", (e) =>\r\n      callBasicFunctionsOnKeyPress(e)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"keyboard\">\r\n      {keyboard.map((button) => {\r\n        return (\r\n          <Button\r\n            key={button.value}\r\n            value={button.value}\r\n            onclick={button.function}\r\n          />\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./display.css\";\r\nimport { formatBigDisplay } from \"../../helpers/formatBigDisplay\";\r\n\r\nconst Display = () => {\r\n  const calculator = useSelector((state) => state.calculator);\r\n  const smallDisplayString = calculator.smallDisplayValuesArrayOfStrings.join(\r\n    \" \"\r\n  );\r\n\r\n  return (\r\n    <section className=\"display\">\r\n      <p className=\"display__small\">\r\n        {smallDisplayString.length <= 40\r\n          ? smallDisplayString\r\n          : \"...\" + smallDisplayString.slice(-40)}\r\n      </p>\r\n      <p className=\"display__big\">\r\n        {formatBigDisplay(calculator.bigDisplayString)}\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","export const formatBigDisplay = (bigDisplayString) => {\r\n  return bigDisplayString.replace(/\\B(?<!,\\d*)(?=(\\d{3})+(?!\\d))/g, \" \");\r\n};\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Keyboard from \"./containers/keyboard/keyboard\";\r\nimport Display from \"./containers/display/display\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Display />\r\n      <Keyboard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const verifyNumberOnChange = (\r\n  bigDisplayString,\r\n  result,\r\n  isEqualSignUsed,\r\n  newNumber\r\n) => {\r\n  if ((bigDisplayString.length < 17 && bigDisplayString.indexOf(\",\") !== -1) || (bigDisplayString.length < 16 && bigDisplayString.indexOf(\",\") === -1) || result) {\r\n    if (isEqualSignUsed || result) {\r\n      //  clear big display\r\n      if (newNumber === \",\") {\r\n        return \"0,\";\r\n      }\r\n      return \"\" + newNumber;\r\n    } else {\r\n      //  add next sign\r\n      if (bigDisplayString.indexOf(\",\") !== -1 && newNumber === \",\")\r\n        return bigDisplayString;\r\n      if (bigDisplayString === \"0\") {\r\n        if (newNumber === \",\") {\r\n          return \"0,\";\r\n        } else {\r\n          return \"\" + newNumber;\r\n        }\r\n      }\r\n      return bigDisplayString + newNumber;\r\n    }\r\n  } else {\r\n    //  Cannot be longer\r\n    return bigDisplayString;\r\n  }\r\n};\r\n","export const convertStringToNumber = (string) => {\r\n  return parseFloat(string.replace(\",\", \".\"));\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\n\r\nexport const createNewSmallDisplayObject = (\r\n  smallDisplayValuesArrayOfStrings,\r\n  bigDisplayString,\r\n  operation,\r\n  result,\r\n  isEqualSignUsed,\r\n  lastNumberAndOperationString,\r\n  isError,\r\n  isSignChanged\r\n) => {\r\n  if (isError) {\r\n    return [];\r\n  } else {\r\n    if (isEqualSignUsed) {\r\n      if (operation === \"=\") {\r\n        //  =\r\n        return [\r\n          bigDisplayString,\r\n          ...lastNumberAndOperationString.split(\" \"),\r\n          operation,\r\n        ];\r\n      } else {\r\n        //  +, -, *, /\r\n        return [\r\n          bigDisplayString.slice(-1) !== \",\"\r\n            ? bigDisplayString\r\n            : bigDisplayString + \"0\",\r\n          operation,\r\n        ];\r\n      }\r\n    } else {\r\n      //  !isEqualSignUsed\r\n      if (result) {\r\n        if (\r\n          !isNaN(\r\n            convertStringToNumber(\r\n              smallDisplayValuesArrayOfStrings.slice(-1).join(\"\")\r\n            )\r\n          )\r\n        ) {\r\n          //  number\r\n          if (isSignChanged) {\r\n            return [bigDisplayString, operation];\r\n          }\r\n          return [...smallDisplayValuesArrayOfStrings, operation];\r\n        } else if (operation !== \"=\") {\r\n          //  +, -, *, /\r\n          return smallDisplayValuesArrayOfStrings.map((element, index) =>\r\n            index !== smallDisplayValuesArrayOfStrings.length - 1\r\n              ? element\r\n              : operation\r\n          );\r\n        } else {\r\n          //  =\r\n          return [\r\n            ...smallDisplayValuesArrayOfStrings,\r\n            bigDisplayString,\r\n            operation,\r\n          ];\r\n        }\r\n      } else {\r\n        //  !result\r\n        if (\r\n          !isNaN(\r\n            convertStringToNumber(\r\n              smallDisplayValuesArrayOfStrings.slice(-1).join(\"\")\r\n            )\r\n          )\r\n        ) {\r\n          return [...smallDisplayValuesArrayOfStrings, operation];\r\n        } else {\r\n          return [\r\n            ...smallDisplayValuesArrayOfStrings,\r\n            bigDisplayString.slice(-1) !== \",\"\r\n              ? bigDisplayString\r\n              : bigDisplayString + \"0\",\r\n            operation,\r\n          ];\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","export const deleteLastCharacterFromBigDisplay = (bigDisplayString, result) => {\r\n  if (!result) {\r\n    if (bigDisplayString.length > 1) {\r\n      return bigDisplayString.slice(0, -1);\r\n    } else {\r\n      return \"0\";\r\n    }\r\n  } else {\r\n    return bigDisplayString;\r\n  }\r\n};\r\n\r\nexport const deleteSmallDisplay = (\r\n  smallDisplayArray,\r\n  isEqualSignUsed\r\n) => {\r\n  if (isEqualSignUsed) {\r\n    return [];\r\n  } else {\r\n    return smallDisplayArray;\r\n  }\r\n};\r\n","export const convertNumberToString = (number) => {\r\n  return (\"\" + number).replace(\".\", \",\");\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { convertNumberToString } from \"./convertNumberToString\";\r\n\r\nexport const changeSign = (\r\n  bigDisplayString,\r\n  smallDisplayValuesArrayOfStrings\r\n) => {\r\n  if (\r\n    !isNaN(\r\n      convertStringToNumber(smallDisplayValuesArrayOfStrings.slice(-1).join(\"\"))\r\n    )\r\n  ) {\r\n    return {\r\n      bigArray: convertNumberToString(\r\n        -1 *\r\n          convertStringToNumber(\r\n            smallDisplayValuesArrayOfStrings.slice(-1).join(\"\")\r\n          )\r\n      ),\r\n      smallArray: smallDisplayValuesArrayOfStrings.map((element, index) =>\r\n        index !== smallDisplayValuesArrayOfStrings.length - 1\r\n          ? element\r\n          : convertNumberToString(\r\n              -1 *\r\n                convertStringToNumber(\r\n                  smallDisplayValuesArrayOfStrings.slice(-1).join(\"\")\r\n                )\r\n            )\r\n      ),\r\n      isSignChanged: true,\r\n    };\r\n  } else {\r\n    if (convertStringToNumber(bigDisplayString) !== 0) {\r\n      return {\r\n        bigArray: convertNumberToString(\r\n          -1 * convertStringToNumber(bigDisplayString)\r\n        ),\r\n        smallArray: null,\r\n        isSignChanged: true,\r\n      };\r\n    } else {\r\n      return { array: bigDisplayString, isSignChanged: false };\r\n    }\r\n  }\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { convertNumberToString } from \"./convertNumberToString\";\r\n\r\nexport const calculatePower = (\r\n  smallDisplayValuesArrayOfStrings,\r\n  bigDisplayString,\r\n  isEqualSignUsed,\r\n  isSignChanged\r\n) => {\r\n  if (isEqualSignUsed || smallDisplayValuesArrayOfStrings.length < 1) {\r\n    //  \"=\" used or empty array\r\n    return {\r\n      bigString: convertNumberToString(\r\n        Math.pow(convertStringToNumber(bigDisplayString), 2)\r\n      ),\r\n      smallArray: [\r\n        convertNumberToString(\r\n          Math.pow(convertStringToNumber(bigDisplayString), 2)\r\n        ),\r\n      ],\r\n    };\r\n  } else if (smallDisplayValuesArrayOfStrings.length > 0) {\r\n    //  it's not a empty array\r\n    if (\r\n      isNaN(\r\n        convertStringToNumber(\r\n          smallDisplayValuesArrayOfStrings.slice(-1).join(\"\")\r\n        )\r\n      )\r\n    ) {\r\n      //  last character isn't number\r\n      return {\r\n        bigString: convertNumberToString(\r\n          Math.pow(convertStringToNumber(bigDisplayString), 2)\r\n        ),\r\n        smallArray: [\r\n          ...smallDisplayValuesArrayOfStrings,\r\n          convertNumberToString(\r\n            Math.pow(convertStringToNumber(bigDisplayString), 2)\r\n          ),\r\n        ],\r\n      };\r\n    } else {\r\n      //  last character is number\r\n      if (isSignChanged) {\r\n        return {\r\n          bigString: convertNumberToString(\r\n            Math.pow(convertStringToNumber(bigDisplayString), 2)\r\n          ),\r\n\r\n          smallArray: [\r\n            convertNumberToString(\r\n              Math.pow(convertStringToNumber(bigDisplayString), 2)\r\n            ),\r\n          ],\r\n        };\r\n      } else {\r\n        const temp = smallDisplayValuesArrayOfStrings.map((element, index) =>\r\n          index !== smallDisplayValuesArrayOfStrings.length - 1\r\n            ? element\r\n            : convertNumberToString(Math.pow(convertStringToNumber(element), 2))\r\n        );\r\n        return {\r\n          bigString: temp.slice(-1),\r\n          smallArray: temp,\r\n        };\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { convertNumberToString } from \"./convertNumberToString\";\r\n\r\nexport const calculateSquareRoot = (\r\n  smallDisplayValuesArrayOfStrings,\r\n  bigDisplayString,\r\n  isEqualSignUsed,\r\n  isSignChanged\r\n) => {\r\n  if (isEqualSignUsed || smallDisplayValuesArrayOfStrings.length < 1) {\r\n    //  \"=\" used or empty array\r\n    if (convertStringToNumber(bigDisplayString) >= 0) {\r\n      return {\r\n        bigString: convertNumberToString(\r\n          Math.sqrt(convertStringToNumber(bigDisplayString))\r\n        ),\r\n        smallArray: [\r\n          convertNumberToString(\r\n            Math.sqrt(convertStringToNumber(bigDisplayString))\r\n          ),\r\n        ],\r\n        error: false,\r\n      };\r\n    } else {\r\n      return {\r\n        bigString: \"Invalid input\",\r\n        smallArray: [\"√(\" + bigDisplayString + \")\"],\r\n        error: true,\r\n      };\r\n    }\r\n  } else if (smallDisplayValuesArrayOfStrings.length > 0) {\r\n    //  it's not a empty array\r\n    if (\r\n      isNaN(\r\n        convertStringToNumber(\r\n          smallDisplayValuesArrayOfStrings.slice(-1).join(\"\")\r\n        )\r\n      )\r\n    ) {\r\n      //  last character isn't number\r\n      if (convertStringToNumber(bigDisplayString) >= 0) {\r\n        return {\r\n          bigString: convertNumberToString(\r\n            Math.sqrt(convertStringToNumber(bigDisplayString))\r\n          ),\r\n          smallArray: [\r\n            ...smallDisplayValuesArrayOfStrings,\r\n            convertNumberToString(\r\n              Math.sqrt(convertStringToNumber(bigDisplayString))\r\n            ),\r\n          ],\r\n          error: false,\r\n        };\r\n      } else {\r\n        return {\r\n          bigString: \"Invalid input\",\r\n          smallArray: [\r\n            ...smallDisplayValuesArrayOfStrings,\r\n            \"√(\" + bigDisplayString + \")\",\r\n          ],\r\n          error: true,\r\n        };\r\n      }\r\n    } else {\r\n      //  last character is number\r\n      if (isSignChanged) {\r\n        if (convertStringToNumber(bigDisplayString) >= 0) {\r\n          return {\r\n            bigString: convertNumberToString(\r\n              Math.sqrt(convertStringToNumber(bigDisplayString))\r\n            ),\r\n\r\n            smallArray: [\r\n              convertNumberToString(\r\n                Math.sqrt(convertStringToNumber(bigDisplayString))\r\n              ),\r\n            ],\r\n            error: false,\r\n          };\r\n        } else {\r\n          return {\r\n            bigString: \"Invalid input\",\r\n            smallArray: [\r\n              ...smallDisplayValuesArrayOfStrings,\r\n              \"√(\" + bigDisplayString + \")\",\r\n            ],\r\n            error: true,\r\n          };\r\n        }\r\n      } else {\r\n        if (\r\n          convertStringToNumber(\r\n            smallDisplayValuesArrayOfStrings.slice(-1).join(\"\")\r\n          ) >= 0\r\n        ) {\r\n          const temp = smallDisplayValuesArrayOfStrings.map((element, index) =>\r\n            index !== smallDisplayValuesArrayOfStrings.length - 1\r\n              ? element\r\n              : convertNumberToString(Math.sqrt(convertStringToNumber(element)))\r\n          );\r\n          return {\r\n            bigString: temp.slice(-1),\r\n            smallArray: temp,\r\n            error: false,\r\n          };\r\n        } else {\r\n          return {\r\n            bigString: \"Invalid input\",\r\n            smallArray: smallDisplayValuesArrayOfStrings.map((element, index) =>\r\n              index !== smallDisplayValuesArrayOfStrings.length - 1\r\n                ? element\r\n                : \"√(\" + element + \")\"\r\n            ),\r\n            error: true,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { convertNumberToString } from \"./convertNumberToString\";\r\n\r\nexport const divideOneByX = (\r\n  smallDisplayValuesArrayOfStrings,\r\n  bigDisplayString,\r\n  isEqualSignUsed\r\n) => {\r\n  if (convertStringToNumber(bigDisplayString) !== 0) {\r\n    if (!isEqualSignUsed) {\r\n      return {\r\n        bigString: convertNumberToString(1/convertStringToNumber(bigDisplayString)),\r\n        smallArray: [...smallDisplayValuesArrayOfStrings, convertNumberToString(1/convertStringToNumber(bigDisplayString))],\r\n        error: false,\r\n      };\r\n    } else {\r\n        return {\r\n            bigString: convertNumberToString(1/convertStringToNumber(bigDisplayString)),\r\n            smallArray: [convertNumberToString(1/convertStringToNumber(bigDisplayString))],\r\n            error: false,\r\n          };\r\n    }\r\n  } else {\r\n    return {\r\n      bigString: \"Do not divide by zero\",\r\n      smallArray: [...smallDisplayValuesArrayOfStrings, \"1/(0)\"],\r\n      error: true,\r\n    };\r\n  }\r\n};\r\n","import { convertNumberToString } from \"./convertNumberToString\";\r\nimport { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { calculateResult } from \"./calculateResult\";\r\n\r\nexport const calculatePercent = (\r\n  smallDisplayValuesArrayOfStrings,\r\n  bigDisplayString,\r\n  isEqualSignUsed,\r\n  result\r\n) => {\r\n  const bigDisplayNumber = convertStringToNumber(bigDisplayString);\r\n  const lastFromSmallArrayNumber = convertStringToNumber(\r\n    smallDisplayValuesArrayOfStrings.slice(-1).join(\"\")\r\n  );\r\n\r\n  if (smallDisplayValuesArrayOfStrings.length < 1) {\r\n    return {\r\n      bigString: \"0\",\r\n      smallArray: [\"0\"],\r\n    };\r\n  }\r\n\r\n  if (result) {\r\n    const calculatedString = convertNumberToString(\r\n      bigDisplayNumber * (bigDisplayNumber / 100)\r\n    );\r\n    return {\r\n      bigString: calculatedString,\r\n      smallArray: isEqualSignUsed\r\n        ? [calculatedString]\r\n        : [...smallDisplayValuesArrayOfStrings, calculatedString],\r\n    };\r\n  }\r\n\r\n  const prevResult = isNaN(lastFromSmallArrayNumber)\r\n    ? calculateResult(smallDisplayValuesArrayOfStrings.slice(0, -1)).string\r\n    : calculateResult(smallDisplayValuesArrayOfStrings.slice(0, -2)).string;\r\n\r\n  const calculatedString = convertNumberToString(\r\n    convertStringToNumber(prevResult) * (bigDisplayNumber / 100)\r\n  );\r\n\r\n  return {\r\n    bigString: calculatedString,\r\n    smallArray: isNaN(lastFromSmallArrayNumber)\r\n      ? [...smallDisplayValuesArrayOfStrings, calculatedString]\r\n      : smallDisplayValuesArrayOfStrings.map((element, index) =>\r\n          index !== smallDisplayValuesArrayOfStrings.length - 1\r\n            ? element\r\n            : calculatedString\r\n        ),\r\n  };\r\n};\r\n","import calculateReducer from \"./calculatorReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  calculator: calculateReducer,\r\n});\r\n","import { verifyNumberOnChange } from \"../helpers/verifyNumberOnChange\";\r\nimport { calculateResult } from \"../helpers/calculateResult\";\r\nimport { createNewSmallDisplayObject } from \"../helpers/createNewSmallDisplayObject\";\r\nimport * as deleteLastCharacter from \"../helpers/deleteLastCharacter\";\r\nimport { changeSign } from \"../helpers/changeSign\";\r\nimport { calculatePower } from \"../helpers/calculatePower\";\r\nimport { calculateSquareRoot } from \"../helpers/calculateSquareRoot\";\r\nimport { divideOneByX } from \"../helpers/divideOneByX\";\r\nimport { calculatePercent } from \"../helpers/calculatePercent\";\r\n\r\nexport default function calculateReducer(\r\n  state = {\r\n    bigDisplayString: \"0\",\r\n    smallDisplayValuesArrayOfStrings: [],\r\n    lastNumberAndOperationString: \"\",\r\n    result: false,\r\n    isEqualSignUsed: false,\r\n    isError: false,\r\n    isSignChanged: false,\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    //  1, 2, 3, 4, 5, 6, 7, 8, 9, 0, \",\" --- done\r\n    case \"bigDisplayValueChanged\":\r\n      return {\r\n        ...state,\r\n        bigDisplayString: state.isError\r\n          ? \"\" + action.payload.number\r\n          : verifyNumberOnChange(\r\n              state.bigDisplayString,\r\n              state.result,\r\n              state.isEqualSignUsed,\r\n              action.payload.number\r\n            ),\r\n\r\n        smallDisplayValuesArrayOfStrings: state.isError\r\n          ? []\r\n          : !state.isEqualSignUsed\r\n          ? state.smallDisplayValuesArrayOfStrings\r\n          : [],\r\n        result: false,\r\n        isEqualSignUsed: false,\r\n        isError: false,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    //  CE --- done\r\n    case \"bigDisplayStringCleared\":\r\n      return {\r\n        ...state,\r\n        bigDisplayString: \"0\",\r\n        smallDisplayValuesArrayOfStrings:\r\n          state.isError || state.isEqualSignUsed\r\n            ? []\r\n            : state.smallDisplayValuesArrayOfStrings,\r\n        result: false,\r\n        isEqualSignUsed: false,\r\n        lastNumberAndOperationString: state.isEqualSignUsed\r\n          ? \"\"\r\n          : state.lastNumberAndOperationString,\r\n        isError: false,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    //  C --- done\r\n    case \"allCleared\":\r\n      return {\r\n        ...state,\r\n        bigDisplayString: \"0\",\r\n        smallDisplayValuesArrayOfStrings: [],\r\n        lastNumberAndOperationString: \"\",\r\n        result: false,\r\n        isEqualSignUsed: false,\r\n        isError: false,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    //  +, -, *, /, = --- done\r\n    case \"operationDone\":\r\n      const newSmallDisplayValuesObjectArrayWithError = createNewSmallDisplayObject(\r\n        state.smallDisplayValuesArrayOfStrings,\r\n        state.bigDisplayString,\r\n        action.payload.operation,\r\n        state.result,\r\n        state.isEqualSignUsed,\r\n        state.lastNumberAndOperationString,\r\n        state.isError,\r\n        state.isSignChanged\r\n      );\r\n\r\n      const calculatedResultAndErrorObject = calculateResult(\r\n        newSmallDisplayValuesObjectArrayWithError\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        bigDisplayString: calculatedResultAndErrorObject.string,\r\n        smallDisplayValuesArrayOfStrings: newSmallDisplayValuesObjectArrayWithError,\r\n        result:\r\n          action.payload.operation === \"=\" && state.isError ? false : true,\r\n        isEqualSignUsed:\r\n          action.payload.operation === \"=\" && !state.isError ? true : false,\r\n        lastNumberAndOperationString: newSmallDisplayValuesObjectArrayWithError\r\n          .slice(-3, -1)\r\n          .join(\" \"),\r\n        isError: calculatedResultAndErrorObject.error,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    //  sqr --- done\r\n    case \"powerCalculated\":\r\n      const calculatedPowerObject = calculatePower(\r\n        state.smallDisplayValuesArrayOfStrings,\r\n        state.bigDisplayString,\r\n        state.isEqualSignUsed,\r\n        state.isSignChanged\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        bigDisplayString: calculatedPowerObject.bigString,\r\n        smallDisplayValuesArrayOfStrings: calculatedPowerObject.smallArray,\r\n      };\r\n\r\n    //  sqrt --- done\r\n    case \"squareRootCalculated\":\r\n      const calculatedSquareRootObject = calculateSquareRoot(\r\n        state.smallDisplayValuesArrayOfStrings,\r\n        state.bigDisplayString,\r\n        state.isEqualSignUsed,\r\n        state.isSignChanged\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        bigDisplayString: calculatedSquareRootObject.bigString,\r\n        smallDisplayValuesArrayOfStrings: calculatedSquareRootObject.smallArray,\r\n        isError: calculatedSquareRootObject.error,\r\n      };\r\n\r\n    //  1/x --- done\r\n    case \"oneByXDivided\":\r\n      const oneByXDividedObject = divideOneByX(\r\n        state.smallDisplayValuesArrayOfStrings,\r\n        state.bigDisplayString,\r\n        state.isEqualSignUsed\r\n      );\r\n      return {\r\n        ...state,\r\n        bigDisplayString: oneByXDividedObject.bigString,\r\n        smallDisplayValuesArrayOfStrings: oneByXDividedObject.smallArray,\r\n        isError: oneByXDividedObject.error,\r\n      };\r\n\r\n    //  % --- done\r\n    case \"percentCalculated\":\r\n      const percentCalculatedObject = calculatePercent(\r\n        state.smallDisplayValuesArrayOfStrings,\r\n        state.bigDisplayString,\r\n        state.isEqualSignUsed,\r\n        state.result\r\n      );\r\n      return {\r\n        ...state,\r\n        bigDisplayString: percentCalculatedObject.bigString,\r\n        smallDisplayValuesArrayOfStrings: percentCalculatedObject.smallArray,\r\n      };\r\n\r\n    //  backspace --- done\r\n    case \"lastCharacterDeleted\":\r\n      return {\r\n        ...state,\r\n        bigDisplayString: state.isError\r\n          ? \"0\"\r\n          : deleteLastCharacter.deleteLastCharacterFromBigDisplay(\r\n              state.bigDisplayString,\r\n              state.result\r\n            ),\r\n        smallDisplayValuesArrayOfStrings: state.isError\r\n          ? []\r\n          : deleteLastCharacter.deleteSmallDisplay(\r\n              state.smallDisplayValuesArrayOfStrings,\r\n              state.isEqualSignUsed\r\n            ),\r\n        isError: false,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    // +/- --- done\r\n    case \"signChanged\":\r\n      const signChangedObject = changeSign(\r\n        state.bigDisplayString,\r\n        state.smallDisplayValuesArrayOfStrings\r\n      );\r\n      return {\r\n        ...state,\r\n        bigDisplayString: signChangedObject.bigArray,\r\n        smallDisplayValuesArrayOfStrings:\r\n          signChangedObject.smallArray !== null\r\n            ? signChangedObject.smallArray\r\n            : state.smallDisplayValuesArrayOfStrings,\r\n        isSignChanged: signChangedObject.isSignChanged,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./reducers/index\";\r\n\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}