{"version":3,"sources":["helpers/calculateResult.js","component/button/button.js","actions/calculatorActions.js","containers/keyboard/keyboardArray.js","containers/keyboard/keyboard.js","containers/display/display.js","helpers/formatMainNumber.js","App.js","serviceWorker.js","helpers/verifyNumberOnChange.js","helpers/convertStringToNumber.js","helpers/createNewSmallDisplayObject.js","helpers/deleteLastCharacter.js","helpers/convertNumberToString.js","helpers/changeSign.js","helpers/calculatePower.js","helpers/calculateSquareRoot.js","helpers/divideOneByX.js","helpers/calculatePercent.js","reducers/index.js","reducers/calculatorReducer.js","store.js","index.js"],"names":["calculateResult","operationsArray","length","error","string","changedSignsArray","join","replace","split","arrayOfNumbers","filter","element","isNaN","arrayOfSigns","slice","parseFloat","result","reduce","prev","current","index","eval","Button","value","onclick","calculator","useSelector","state","dispatch","useDispatch","buttonsToDisableArray","className","isError","indexOf","onClick","mainNumberChanged","number","type","payload","operationDone","operation","keyboard","function","calculatorActions","Keyboard","callBasicFunctionsOnKeyPress","e","preventDefault","keyCode","useEffect","document","addEventListener","removeEventListener","map","button","key","Display","historyString","historyArray","mainNumber","App","Boolean","window","location","hostname","match","verifyNumberOnChange","newNumber","isEqualSignUsed","convertStringToNumber","createNewSmallDisplayObject","lastNumberAndOperationString","isSignChanged","deleteLastCharacterFromBigDisplay","deleteHistory","convertNumberToString","changeSign","bigString","smallArray","calculatePower","Math","pow","temp","calculateSquareRoot","sqrt","divideOneByX","calculatePercent","bigDisplayNumber","lastFromSmallArrayNumber","calculatedString","prevResult","rootReducer","combineReducers","action","newSmallDisplayValuesObjectArrayWithError","calculatedResultAndErrorObject","calculatedPowerObject","calculatedSquareRootObject","oneByXDividedObject","percentCalculatedObject","deleteLastCharacter","signChangedObject","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.86ee672d.chunk.js","sourcesContent":["export const calculateResult = (operationsArray) => {\r\n  if (operationsArray.length < 1) {\r\n    return {\r\n      error: false,\r\n      string: \"0\",\r\n    };\r\n  } else {\r\n    const changedSignsArray = operationsArray\r\n      .join(\" \")\r\n      .replace(/,/g, \".\")\r\n      .replace(/×/g, \"*\")\r\n      .replace(/÷/g, \"/\")\r\n      .replace(/- -/g, \"+ \")\r\n      .split(\" \");\r\n\r\n    const arrayOfNumbers = changedSignsArray.filter(\r\n      (element) => !isNaN(element)\r\n    );\r\n    const arrayOfSigns = changedSignsArray.filter((element) => isNaN(element));\r\n\r\n    if (\r\n      arrayOfSigns.slice(-2, -1).join(\"\") === \"/\" &&\r\n      parseFloat(arrayOfNumbers.slice(-1)) === 0\r\n    ) {\r\n      if (parseFloat(arrayOfNumbers.slice(-2, -1)) === 0) {\r\n        return { error: true, string: \"Undefined result\" };\r\n      } else {\r\n        return { error: true, string: \"Do not divide by zero\" };\r\n      }\r\n    } else {\r\n      const result =\r\n        \"\" +\r\n        arrayOfNumbers.reduce((prev, current, index) => {\r\n          // eslint-disable-next-line no-eval\r\n          return eval(\"\" + prev + arrayOfSigns[index - 1] + current);\r\n        });\r\n\r\n      return {\r\n        error: false,\r\n        string: result.replace(\".\", \",\"),\r\n      };\r\n    }\r\n  }\r\n  // }\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./button.scss\";\r\n\r\nconst Button = ({ value, onclick }) => {\r\n  const calculator = useSelector((state) => state.calculator);\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const buttonsToDisableArray = [\r\n    \"%\",\r\n    \"+/-\",\r\n    \",\",\r\n    \"+\",\r\n    \"-\",\r\n    \"×\",\r\n    \"÷\",\r\n    \"x²\",\r\n    \"√x\",\r\n    \"1/x\",\r\n  ];\r\n\r\n  return (\r\n    <button\r\n      className={\r\n        isNaN(value)\r\n          ? value !== \"=\"\r\n            ? calculator.isError && buttonsToDisableArray.indexOf(value) !== -1\r\n              ? \"button operation disabled\"\r\n              : \"button operation\"\r\n            : \"button result\"\r\n          : \"button\"\r\n      }\r\n      onClick={\r\n        calculator.isError && buttonsToDisableArray.indexOf(value) !== -1\r\n          ? () => {}\r\n          : () => dispatch(onclick)\r\n      }\r\n    >\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export const mainNumberChanged = (number) => ({\r\n  type: \"mainNumberChanged\",\r\n  payload: {\r\n    number,\r\n  },\r\n});\r\n\r\nexport const mainNumberCleared = () => ({\r\n  type: \"mainNumberCleared\",\r\n});\r\n\r\nexport const allCleared = () => ({\r\n  type: \"allCleared\",\r\n});\r\n\r\nexport const operationDone = (operation) => ({\r\n  type: \"operationDone\",\r\n  payload: {\r\n    operation,\r\n  },\r\n});\r\n\r\nexport const lastCharacterDeleted = () => ({\r\n  type: \"lastCharacterDeleted\",\r\n});\r\n\r\nexport const signChanged = () => ({\r\n  type: \"signChanged\",\r\n});\r\n\r\nexport const powerCalculated = () => ({\r\n  type: \"powerCalculated\",\r\n});\r\n\r\nexport const squareRootCalculated = () => ({\r\n  type: \"squareRootCalculated\",\r\n});\r\n\r\nexport const oneByXDivided = () => ({\r\n  type: \"oneByXDivided\",\r\n});\r\n\r\nexport const percentCalculated = () => ({\r\n  type: \"percentCalculated\",\r\n});\r\n","import * as calculatorActions from \"../../actions/calculatorActions\";\r\n\r\nexport const keyboard = [\r\n  {\r\n    value: \"%\",\r\n    function: calculatorActions.percentCalculated(),\r\n  },\r\n  {\r\n    value: \"CE\",\r\n    function: calculatorActions.mainNumberCleared(),\r\n  },\r\n  {\r\n    value: \"C\",\r\n    function: calculatorActions.allCleared(),\r\n  },\r\n  {\r\n    value: \"⊲\",\r\n    function: calculatorActions.lastCharacterDeleted(),\r\n  },\r\n  {\r\n    value: \"1/x\",\r\n    function: calculatorActions.oneByXDivided(),\r\n  },\r\n  {\r\n    value: \"x²\",\r\n    function: calculatorActions.powerCalculated(),\r\n  },\r\n  {\r\n    value: \"√x\",\r\n    function: calculatorActions.squareRootCalculated(),\r\n  },\r\n  {\r\n    value: \"÷\",\r\n    function: calculatorActions.operationDone(\"÷\"),\r\n  },\r\n  {\r\n    value: \"7\",\r\n    function: calculatorActions.mainNumberChanged(7),\r\n  },\r\n  {\r\n    value: \"8\",\r\n    function: calculatorActions.mainNumberChanged(8),\r\n  },\r\n  {\r\n    value: \"9\",\r\n    function: calculatorActions.mainNumberChanged(9),\r\n  },\r\n  {\r\n    value: \"×\",\r\n    function: calculatorActions.operationDone(\"×\"),\r\n  },\r\n  {\r\n    value: \"4\",\r\n    function: calculatorActions.mainNumberChanged(4),\r\n  },\r\n  {\r\n    value: \"5\",\r\n    function: calculatorActions.mainNumberChanged(5),\r\n  },\r\n  {\r\n    value: \"6\",\r\n    function: calculatorActions.mainNumberChanged(6),\r\n  },\r\n  {\r\n    value: \"-\",\r\n    function: calculatorActions.operationDone(\"-\"),\r\n  },\r\n  {\r\n    value: \"1\",\r\n    function: calculatorActions.mainNumberChanged(1),\r\n  },\r\n  {\r\n    value: \"2\",\r\n    function: calculatorActions.mainNumberChanged(2),\r\n  },\r\n  {\r\n    value: \"3\",\r\n    function: calculatorActions.mainNumberChanged(3),\r\n  },\r\n  {\r\n    value: \"+\",\r\n    function: calculatorActions.operationDone(\"+\"),\r\n  },\r\n  {\r\n    value: \"+/-\",\r\n    function: calculatorActions.signChanged(),\r\n  },\r\n  {\r\n    value: \"0\",\r\n    function: calculatorActions.mainNumberChanged(0),\r\n  },\r\n  {\r\n    value: \",\",\r\n    function: calculatorActions.mainNumberChanged(\",\"),\r\n  },\r\n  {\r\n    value: \"=\",\r\n    function: calculatorActions.operationDone(\"=\"),\r\n  },\r\n];\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport \"./keyboard.scss\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Button from \"../../component/button/button\";\r\nimport * as calculatorActions from \"../../actions/calculatorActions\";\r\nimport { keyboard } from \"./keyboardArray\";\r\n\r\nconst Keyboard = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const callBasicFunctionsOnKeyPress = (e) => {\r\n    e.preventDefault();\r\n    switch (e.keyCode) {\r\n      //    1\r\n      case 49:\r\n        dispatch(calculatorActions.mainNumberChanged(1));\r\n        break;\r\n      //    2\r\n      case 50:\r\n        dispatch(calculatorActions.mainNumberChanged(2));\r\n        break;\r\n      //    3\r\n      case 51:\r\n        dispatch(calculatorActions.mainNumberChanged(3));\r\n        break;\r\n      //    4\r\n      case 52:\r\n        dispatch(calculatorActions.mainNumberChanged(4));\r\n        break;\r\n      //    5\r\n      case 53:\r\n        dispatch(calculatorActions.mainNumberChanged(5));\r\n        break;\r\n      //    6\r\n      case 54:\r\n        dispatch(calculatorActions.mainNumberChanged(6));\r\n        break;\r\n      //    7\r\n      case 55:\r\n        dispatch(calculatorActions.mainNumberChanged(7));\r\n        break;\r\n      //    8\r\n      case 56:\r\n        dispatch(calculatorActions.mainNumberChanged(8));\r\n        break;\r\n      //    9\r\n      case 57:\r\n        dispatch(calculatorActions.mainNumberChanged(9));\r\n        break;\r\n      //    0\r\n      case 48:\r\n        dispatch(calculatorActions.mainNumberChanged(0));\r\n        break;\r\n      //    ,\r\n      case 44:\r\n        dispatch(calculatorActions.mainNumberChanged(\",\"));\r\n        break;\r\n      //    +\r\n      case 43:\r\n        dispatch(calculatorActions.operationDone(\"+\"));\r\n        break;\r\n      //    -\r\n      case 45:\r\n        dispatch(calculatorActions.operationDone(\"-\"));\r\n        break;\r\n      //    *\r\n      case 42:\r\n        dispatch(calculatorActions.operationDone(\"×\"));\r\n        break;\r\n      //    /\r\n      case 47:\r\n        dispatch(calculatorActions.operationDone(\"÷\"));\r\n        break;\r\n\r\n      //    enter\r\n      case 13:\r\n        dispatch(calculatorActions.operationDone(\"=\"));\r\n        break;\r\n      //    =\r\n      case 61:\r\n        dispatch(calculatorActions.operationDone(\"=\"));\r\n        break;\r\n      //    backspace\r\n      case 8:\r\n        dispatch(calculatorActions.lastCharacterDeleted());\r\n        break;\r\n      //    esc (C)\r\n      case 27:\r\n        dispatch(calculatorActions.allCleared());\r\n        break;\r\n      //    delete (CE)\r\n      case 46:\r\n        dispatch(calculatorActions.mainNumberCleared());\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keypress\", (e) =>\r\n      callBasicFunctionsOnKeyPress(e)\r\n    );\r\n    return document.removeEventListener(\"keypress\", (e) =>\r\n      callBasicFunctionsOnKeyPress(e)\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"keyboard\">\r\n      {keyboard.map((button) => {\r\n        return (\r\n          <Button\r\n            key={button.value}\r\n            value={button.value}\r\n            onclick={button.function}\r\n          />\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./display.scss\";\r\nimport { formatMainNumber } from \"../../helpers/formatMainNumber\";\r\n\r\nconst Display = () => {\r\n  const calculator = useSelector((state) => state.calculator);\r\n  const historyString = calculator.historyArray.join(\r\n    \" \"\r\n  );\r\n\r\n  return (\r\n    <section className=\"display\">\r\n      <p className=\"display__small\">\r\n        {historyString.length <= 40\r\n          ? historyString\r\n          : \"...\" + historyString.slice(-40)}\r\n      </p>\r\n      <p className=\"display__big\">\r\n        {formatMainNumber(calculator.mainNumber)}\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","export const formatMainNumber = (mainNumber) => {\r\n  return mainNumber.replace(/\\B(?<!,\\d*)(?=(\\d{3})+(?!\\d))/g, \" \");\r\n};\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport Keyboard from \"./containers/keyboard/keyboard\";\r\nimport Display from \"./containers/display/display\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Display />\r\n      <Keyboard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const verifyNumberOnChange = (\r\n  { mainNumber, result, isEqualSignUsed },\r\n  newNumber\r\n) => {\r\n  if (\r\n    (mainNumber.length < 17 && mainNumber.indexOf(\",\") !== -1) ||\r\n    (mainNumber.length < 16 && mainNumber.indexOf(\",\") === -1) ||\r\n    result\r\n  ) {\r\n    if (isEqualSignUsed || result) {\r\n      //  clear big display\r\n      if (newNumber === \",\") {\r\n        return \"0,\";\r\n      }\r\n      return \"\" + newNumber;\r\n    } else {\r\n      //  add next sign\r\n      if (mainNumber.indexOf(\",\") !== -1 && newNumber === \",\")\r\n        return mainNumber;\r\n      if (mainNumber === \"0\") {\r\n        if (newNumber === \",\") {\r\n          return \"0,\";\r\n        } else {\r\n          return \"\" + newNumber;\r\n        }\r\n      }\r\n      return mainNumber + newNumber;\r\n    }\r\n  } else {\r\n    //  Cannot be longer\r\n    return mainNumber;\r\n  }\r\n};\r\n","export const convertStringToNumber = (string) => {\r\n  return parseFloat(string.replace(\",\", \".\"));\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\n\r\nexport const createNewSmallDisplayObject = (\r\n  {\r\n    historyArray,\r\n    mainNumber,\r\n    result,\r\n    isEqualSignUsed,\r\n    lastNumberAndOperationString,\r\n    isError,\r\n    isSignChanged,\r\n  },\r\n  operation\r\n) => {\r\n  if (isError) {\r\n    return [];\r\n  } else {\r\n    // !isError\r\n    if (isEqualSignUsed) {\r\n      if (operation === \"=\") {\r\n        //  =\r\n        if (historyArray.length === 2) {\r\n          return historyArray;\r\n        } else {\r\n          return [\r\n            mainNumber,\r\n            ...lastNumberAndOperationString.split(\" \"),\r\n            operation,\r\n          ];\r\n        }\r\n      } else {\r\n        //  +, -, *, /\r\n        return [\r\n          mainNumber.slice(-1) !== \",\" ? mainNumber : mainNumber + \"0\",\r\n          operation,\r\n        ];\r\n      }\r\n    } else {\r\n      //  !isEqualSignUsed\r\n      if (result) {\r\n        if (!isNaN(convertStringToNumber(historyArray.slice(-1).join(\"\")))) {\r\n          //  number\r\n          if (isSignChanged) {\r\n            return [mainNumber, operation];\r\n          }\r\n          return [...historyArray, operation];\r\n        } else if (operation !== \"=\") {\r\n          //  +, -, *, /\r\n          return historyArray.map((element, index) =>\r\n            index !== historyArray.length - 1 ? element : operation\r\n          );\r\n        } else {\r\n          //  =\r\n          return [...historyArray, mainNumber, operation];\r\n        }\r\n      } else {\r\n        //  !result\r\n        if (!isNaN(convertStringToNumber(historyArray.slice(-1).join(\"\")))) {\r\n          return [...historyArray, operation];\r\n        } else {\r\n          return [\r\n            ...historyArray,\r\n            mainNumber.slice(-1) !== \",\" ? mainNumber : mainNumber + \"0\",\r\n            operation,\r\n          ];\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","export const deleteLastCharacterFromBigDisplay = ({ mainNumber, result }) => {\r\n  if (!result) {\r\n    if (mainNumber.length > 1) {\r\n      return mainNumber.slice(0, -1);\r\n    } else {\r\n      return \"0\";\r\n    }\r\n  } else {\r\n    return mainNumber;\r\n  }\r\n};\r\n\r\nexport const deleteHistory = ({ historyArray, isEqualSignUsed }) => {\r\n  if (isEqualSignUsed) {\r\n    return [];\r\n  } else {\r\n    return historyArray;\r\n  }\r\n};\r\n","export const convertNumberToString = (number) => {\r\n  return (\"\" + number).replace(\".\", \",\");\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { convertNumberToString } from \"./convertNumberToString\";\r\n\r\nexport const changeSign = ({ mainNumber, historyArray }) => {\r\n  if (!isNaN(convertStringToNumber(historyArray.slice(-1).join(\"\")))) {\r\n    return {\r\n      bigString: convertNumberToString(\r\n        -1 * convertStringToNumber(historyArray.slice(-1).join(\"\"))\r\n      ),\r\n      smallArray: historyArray.map((element, index) =>\r\n        index !== historyArray.length - 1\r\n          ? element\r\n          : convertNumberToString(\r\n              -1 * convertStringToNumber(historyArray.slice(-1).join(\"\"))\r\n            )\r\n      ),\r\n      isSignChanged: true,\r\n    };\r\n  } else {\r\n    if (convertStringToNumber(mainNumber) !== 0) {\r\n      return {\r\n        bigString: convertNumberToString(\r\n          -1 * convertStringToNumber(mainNumber)\r\n        ),\r\n        smallArray: null,\r\n        isSignChanged: true,\r\n      };\r\n    } else {\r\n      return { bigString: mainNumber, isSignChanged: false };\r\n    }\r\n  }\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { convertNumberToString } from \"./convertNumberToString\";\r\n\r\nexport const calculatePower = ({\r\n  historyArray,\r\n  mainNumber,\r\n  isEqualSignUsed,\r\n  isSignChanged,\r\n}) => {\r\n  if (isEqualSignUsed || historyArray.length < 1) {\r\n    //  \"=\" used or empty array\r\n    return {\r\n      bigString: convertNumberToString(\r\n        Math.pow(convertStringToNumber(mainNumber), 2)\r\n      ),\r\n      smallArray: [\r\n        convertNumberToString(Math.pow(convertStringToNumber(mainNumber), 2)),\r\n      ],\r\n    };\r\n  } else if (historyArray.length > 0) {\r\n    //  it's not a empty array\r\n    if (isNaN(convertStringToNumber(historyArray.slice(-1).join(\"\")))) {\r\n      //  last character isn't number\r\n      return {\r\n        bigString: convertNumberToString(\r\n          Math.pow(convertStringToNumber(mainNumber), 2)\r\n        ),\r\n        smallArray: [\r\n          ...historyArray,\r\n          convertNumberToString(Math.pow(convertStringToNumber(mainNumber), 2)),\r\n        ],\r\n      };\r\n    } else {\r\n      //  last character is number\r\n      if (isSignChanged) {\r\n        return {\r\n          bigString: convertNumberToString(\r\n            Math.pow(convertStringToNumber(mainNumber), 2)\r\n          ),\r\n\r\n          smallArray: [\r\n            convertNumberToString(\r\n              Math.pow(convertStringToNumber(mainNumber), 2)\r\n            ),\r\n          ],\r\n        };\r\n      } else {\r\n        const temp = historyArray.map((element, index) =>\r\n          index !== historyArray.length - 1\r\n            ? element\r\n            : convertNumberToString(Math.pow(convertStringToNumber(element), 2))\r\n        );\r\n        return {\r\n          bigString: temp.slice(-1).join(\"\"),\r\n          smallArray: temp,\r\n        };\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { convertNumberToString } from \"./convertNumberToString\";\r\n\r\nexport const calculateSquareRoot = ({\r\n  historyArray,\r\n  mainNumber,\r\n  isEqualSignUsed,\r\n  isSignChanged,\r\n}) => {\r\n  if (isEqualSignUsed || historyArray.length < 1) {\r\n    //  \"=\" used or empty array\r\n    if (convertStringToNumber(mainNumber) >= 0) {\r\n      return {\r\n        bigString: convertNumberToString(\r\n          Math.sqrt(convertStringToNumber(mainNumber))\r\n        ),\r\n        smallArray: [\r\n          convertNumberToString(Math.sqrt(convertStringToNumber(mainNumber))),\r\n        ],\r\n        error: false,\r\n      };\r\n    } else {\r\n      return {\r\n        bigString: \"Invalid input\",\r\n        smallArray: [\"√(\" + mainNumber + \")\"],\r\n        error: true,\r\n      };\r\n    }\r\n  } else if (historyArray.length > 0) {\r\n    //  it's not a empty array\r\n    if (isNaN(convertStringToNumber(historyArray.slice(-1).join(\"\")))) {\r\n      //  last character isn't number\r\n      if (convertStringToNumber(mainNumber) >= 0) {\r\n        return {\r\n          bigString: convertNumberToString(\r\n            Math.sqrt(convertStringToNumber(mainNumber))\r\n          ),\r\n          smallArray: [\r\n            ...historyArray,\r\n            convertNumberToString(Math.sqrt(convertStringToNumber(mainNumber))),\r\n          ],\r\n          error: false,\r\n        };\r\n      } else {\r\n        return {\r\n          bigString: \"Invalid input\",\r\n          smallArray: [...historyArray, \"√(\" + mainNumber + \")\"],\r\n          error: true,\r\n        };\r\n      }\r\n    } else {\r\n      //  last character is number\r\n      if (isSignChanged) {\r\n        if (convertStringToNumber(mainNumber) >= 0) {\r\n          return {\r\n            bigString: convertNumberToString(\r\n              Math.sqrt(convertStringToNumber(mainNumber))\r\n            ),\r\n\r\n            smallArray: [\r\n              convertNumberToString(\r\n                Math.sqrt(convertStringToNumber(mainNumber))\r\n              ),\r\n            ],\r\n            error: false,\r\n          };\r\n        } else {\r\n          return {\r\n            bigString: \"Invalid input\",\r\n            smallArray: [...historyArray, \"√(\" + mainNumber + \")\"],\r\n            error: true,\r\n          };\r\n        }\r\n      } else {\r\n        if (convertStringToNumber(historyArray.slice(-1).join(\"\")) >= 0) {\r\n          const temp = historyArray.map((element, index) =>\r\n            index !== historyArray.length - 1\r\n              ? element\r\n              : convertNumberToString(Math.sqrt(convertStringToNumber(element)))\r\n          );\r\n          return {\r\n            bigString: temp.slice(-1).join(\"\"),\r\n            smallArray: temp,\r\n            error: false,\r\n          };\r\n        } else {\r\n          return {\r\n            bigString: \"Invalid input\",\r\n            smallArray: historyArray.map((element, index) =>\r\n              index !== historyArray.length - 1 ? element : \"√(\" + element + \")\"\r\n            ),\r\n            error: true,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { convertNumberToString } from \"./convertNumberToString\";\r\n\r\nexport const divideOneByX = ({ historyArray, mainNumber, isEqualSignUsed }) => {\r\n  if (convertStringToNumber(mainNumber) !== 0) {\r\n    if (!isEqualSignUsed) {\r\n      return {\r\n        bigString: convertNumberToString(1 / convertStringToNumber(mainNumber)),\r\n        smallArray: [\r\n          ...historyArray,\r\n          convertNumberToString(1 / convertStringToNumber(mainNumber)),\r\n        ],\r\n        error: false,\r\n      };\r\n    } else {\r\n      return {\r\n        bigString: convertNumberToString(1 / convertStringToNumber(mainNumber)),\r\n        smallArray: [\r\n          convertNumberToString(1 / convertStringToNumber(mainNumber)),\r\n        ],\r\n        error: false,\r\n      };\r\n    }\r\n  } else {\r\n    return {\r\n      bigString: \"Do not divide by zero\",\r\n      smallArray: [...historyArray, \"1/(0)\"],\r\n      error: true,\r\n    };\r\n  }\r\n};\r\n","import { convertNumberToString } from \"./convertNumberToString\";\r\nimport { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { calculateResult } from \"./calculateResult\";\r\n\r\nexport const calculatePercent = ({\r\n  historyArray,\r\n  mainNumber,\r\n  isEqualSignUsed,\r\n  result,\r\n}) => {\r\n  const bigDisplayNumber = convertStringToNumber(mainNumber);\r\n  const lastFromSmallArrayNumber = convertStringToNumber(\r\n    historyArray.slice(-1).join(\"\")\r\n  );\r\n\r\n  if (historyArray.length < 1) {\r\n    return {\r\n      bigString: \"0\",\r\n      smallArray: [\"0\"],\r\n    };\r\n  }\r\n\r\n  if (result) {\r\n    const calculatedString = convertNumberToString(\r\n      bigDisplayNumber * (bigDisplayNumber / 100)\r\n    );\r\n    return {\r\n      bigString: calculatedString,\r\n      smallArray: isEqualSignUsed\r\n        ? [calculatedString]\r\n        : [...historyArray, calculatedString],\r\n    };\r\n  }\r\n\r\n  const prevResult = isNaN(lastFromSmallArrayNumber)\r\n    ? calculateResult(historyArray.slice(0, -1)).string\r\n    : calculateResult(historyArray.slice(0, -2)).string;\r\n\r\n  const calculatedString = convertNumberToString(\r\n    convertStringToNumber(prevResult) * (bigDisplayNumber / 100)\r\n  );\r\n\r\n  return {\r\n    bigString: calculatedString,\r\n    smallArray: isNaN(lastFromSmallArrayNumber)\r\n      ? [...historyArray, calculatedString]\r\n      : historyArray.map((element, index) =>\r\n          index !== historyArray.length - 1 ? element : calculatedString\r\n        ),\r\n  };\r\n};\r\n","import calculateReducer from \"./calculatorReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  calculator: calculateReducer,\r\n});\r\n","import { verifyNumberOnChange } from \"../helpers/verifyNumberOnChange\";\r\nimport { calculateResult } from \"../helpers/calculateResult\";\r\nimport { createNewSmallDisplayObject } from \"../helpers/createNewSmallDisplayObject\";\r\nimport * as deleteLastCharacter from \"../helpers/deleteLastCharacter\";\r\nimport { changeSign } from \"../helpers/changeSign\";\r\nimport { calculatePower } from \"../helpers/calculatePower\";\r\nimport { calculateSquareRoot } from \"../helpers/calculateSquareRoot\";\r\nimport { divideOneByX } from \"../helpers/divideOneByX\";\r\nimport { calculatePercent } from \"../helpers/calculatePercent\";\r\n\r\nexport default function calculateReducer(\r\n  state = {\r\n    mainNumber: \"0\",\r\n    historyArray: [],\r\n    lastNumberAndOperationString: \"\",\r\n    result: false,\r\n    isEqualSignUsed: false,\r\n    isError: false,\r\n    isSignChanged: false,\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    //  1, 2, 3, 4, 5, 6, 7, 8, 9, 0, \",\" --- done\r\n    case \"mainNumberChanged\":\r\n      return {\r\n        ...state,\r\n        mainNumber: state.isError\r\n          ? \"\" + action.payload.number\r\n          : verifyNumberOnChange(state, action.payload.number),\r\n\r\n        historyArray: state.isError\r\n          ? []\r\n          : !state.isEqualSignUsed\r\n          ? state.historyArray\r\n          : [],\r\n        result: false,\r\n        isEqualSignUsed: false,\r\n        lastNumberAndOperationString: state.isError\r\n          ? \"\"\r\n          : state.lastNumberAndOperationString,\r\n        isError: false,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    //  CE --- done\r\n    case \"mainNumberCleared\":\r\n      return {\r\n        ...state,\r\n        mainNumber: \"0\",\r\n        historyArray:\r\n          state.isError || state.isEqualSignUsed ? [] : state.historyArray,\r\n        result: false,\r\n        isEqualSignUsed: false,\r\n        lastNumberAndOperationString: state.isEqualSignUsed\r\n          ? \"\"\r\n          : state.lastNumberAndOperationString,\r\n        isError: false,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    //  C --- done\r\n    case \"allCleared\":\r\n      return {\r\n        ...state,\r\n        mainNumber: \"0\",\r\n        historyArray: [],\r\n        lastNumberAndOperationString: \"\",\r\n        result: false,\r\n        isEqualSignUsed: false,\r\n        isError: false,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    //  +, -, *, /, = --- done\r\n    case \"operationDone\":\r\n      const newSmallDisplayValuesObjectArrayWithError = createNewSmallDisplayObject(\r\n        state,\r\n        action.payload.operation\r\n      );\r\n\r\n      const calculatedResultAndErrorObject = calculateResult(\r\n        newSmallDisplayValuesObjectArrayWithError\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        mainNumber: calculatedResultAndErrorObject.string,\r\n        historyArray: newSmallDisplayValuesObjectArrayWithError,\r\n        result:\r\n          action.payload.operation === \"=\" && state.isError ? false : true,\r\n        isEqualSignUsed:\r\n          action.payload.operation === \"=\" && !state.isError ? true : false,\r\n        lastNumberAndOperationString: newSmallDisplayValuesObjectArrayWithError\r\n          .slice(-3, -1)\r\n          .join(\" \"),\r\n        isError: calculatedResultAndErrorObject.error,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    //  sqr --- done\r\n    case \"powerCalculated\":\r\n      const calculatedPowerObject = calculatePower(state);\r\n\r\n      return {\r\n        ...state,\r\n        mainNumber: calculatedPowerObject.bigString,\r\n        historyArray: calculatedPowerObject.smallArray,\r\n      };\r\n\r\n    //  sqrt --- done\r\n    case \"squareRootCalculated\":\r\n      const calculatedSquareRootObject = calculateSquareRoot(state);\r\n\r\n      return {\r\n        ...state,\r\n        mainNumber: calculatedSquareRootObject.bigString,\r\n        historyArray: calculatedSquareRootObject.smallArray,\r\n        isError: calculatedSquareRootObject.error,\r\n      };\r\n\r\n    //  1/x --- done\r\n    case \"oneByXDivided\":\r\n      const oneByXDividedObject = divideOneByX(state);\r\n      return {\r\n        ...state,\r\n        mainNumber: oneByXDividedObject.bigString,\r\n        historyArray: oneByXDividedObject.smallArray,\r\n        isError: oneByXDividedObject.error,\r\n      };\r\n\r\n    //  % --- done\r\n    case \"percentCalculated\":\r\n      const percentCalculatedObject = calculatePercent(state);\r\n      return {\r\n        ...state,\r\n        mainNumber: percentCalculatedObject.bigString,\r\n        historyArray: percentCalculatedObject.smallArray,\r\n      };\r\n\r\n    //  backspace --- done\r\n    case \"lastCharacterDeleted\":\r\n      return {\r\n        ...state,\r\n        mainNumber: state.isError\r\n          ? \"0\"\r\n          : deleteLastCharacter.deleteLastCharacterFromBigDisplay(state),\r\n        historyArray: state.isError\r\n          ? []\r\n          : deleteLastCharacter.deleteHistory(state),\r\n        lastNumberAndOperationString: state.isError\r\n          ? \"\"\r\n          : state.lastNumberAndOperationString,\r\n        isError: false,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    // +/- --- done\r\n    case \"signChanged\":\r\n      const signChangedObject = changeSign(state);\r\n      return {\r\n        ...state,\r\n        mainNumber: signChangedObject.bigString,\r\n        historyArray:\r\n          signChangedObject.smallArray !== null\r\n            ? signChangedObject.smallArray\r\n            : state.historyArray,\r\n        isSignChanged: signChangedObject.isSignChanged,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./reducers/index\";\r\n\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}