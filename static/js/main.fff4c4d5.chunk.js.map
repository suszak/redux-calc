{"version":3,"sources":["helpers/calculateResult.js","helpers/checkDivideError.js","helpers/formatOperationsArray.js","component/button/consts/buttonsToDisableArray.js","component/button/helpers/createClassName.js","component/button/button.js","component/button/helpers/createOnClick.js","helpers/verifyNumberOnChange.js","actions/calculatorActions.js","containers/keyboard/helpers/handleFunctionToCallOnKeyPress.js","containers/keyboard/keyboard.js","containers/keyboard/helpers/keyboardArray.js","containers/display/display.js","containers/display/helpers/formatSmallDisplay.js","containers/display/helpers/formatBigDisplay.js","App.js","serviceWorker.js","helpers/convertStringToNumber.js","helpers/createNewHistoryOfOperationsObject.js","helpers/deleteLastCharacter.js","helpers/convertNumberToString.js","helpers/changeSign.js","helpers/calculatePower.js","helpers/calculateSquareRoot.js","helpers/divideOneByX.js","helpers/calculatePercent.js","reducers/index.js","reducers/calculatorReducer.js","store.js","index.js"],"names":["calculateResult","operationsArray","length","error","string","changedSignsArray","formatOperationArray","arrayOfNumbers","filter","element","isNaN","arrayOfSigns","slice","join","parseFloat","checkDivideError","result","reduce","prev","current","index","eval","replace","split","buttonsToDisableArray","buttonClassName","value","isError","indexOf","Button","onclick","calculator","useSelector","state","dispatch","useDispatch","buttonOnClickValue","buttonOnClick","className","onClick","verifyNumberOnChange","newNumber","mainValueString","isEqualSignUsed","mainValueChanged","number","type","payload","operationDone","operation","handleFunctionToCallOnKeyPress","event","preventDefault","keyCode","calculatorActions","Keyboard","useEffect","document","addEventListener","removeEventListener","function","map","button","key","Display","historyOfOperationsString","historyOfOperationsArrayOfStrings","App","Boolean","window","location","hostname","match","convertStringToNumber","createNewHistoryOfOperationsObject","lastNumberAndOperationString","isSignChanged","deleteLastCharacterFromBigDisplay","deleteSmallDisplay","historyOfOperationsArray","convertNumberToString","changeSign","bigString","smallArray","calculatePower","Math","pow","temp","calculateSquareRoot","sqrt","divideOneByX","calculatePercent","mainValueNumber","lastFromSmallArrayNumber","calculatedString","prevResult","rootReducer","combineReducers","action","newSmallDisplayValuesObjectArrayWithError","calculatedResultAndErrorObject","calculatedPowerObject","calculatedSquareRootObject","oneByXDividedObject","percentCalculatedObject","deleteLastCharacter","signChangedObject","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0JAAA,2OAGaA,gBAAkB,SAAlBA,gBAAmBC,iBAC9B,GAAIA,gBAAgBC,OAAS,EAE3B,MAAO,CACLC,OAAO,EACPC,OAAQ,KAIV,IAAMC,kBAAoBC,8DAAqBL,iBAEzCM,eAAiBF,kBAAkBG,QACvC,SAACC,GAAD,OAAcC,MAAMD,MAGhBE,aAAeN,kBAAkBG,QAAO,SAACC,GAAD,OAAaC,MAAMD,MAEjE,GAC0C,MAAxCE,aAAaC,OAAO,GAAI,GAAGC,KAAK,KACS,IAAzCC,WAAWP,eAAeK,OAAO,IAEjC,OAAOG,yDAAiBR,gBAExB,IAAMS,OACJ,GACAT,eAAeU,QAAO,SAACC,KAAMC,QAASC,OAEpC,OAAOC,KAAK,GAAKH,KAAOP,aAAaS,MAAQ,GAAKD,YAGtD,MAAO,CACLhB,OAAO,EACPC,OAAQY,OAAOM,QAAQ,IAAK,Q,mCCnCpC,kCAAO,IAAMP,EAAmB,SAACR,GAC/B,OAAiD,IAA7CO,WAAWP,EAAeK,OAAO,GAAI,IAChC,CAAET,OAAO,EAAMC,OAAQ,oBAEvB,CAAED,OAAO,EAAMC,OAAQ,2B,6BCJlC,kCAAO,IAAME,EAAuB,SAACL,GACnC,OAAOA,EACJY,KAAK,KACLS,QAAQ,KAAM,KACdA,QAAQ,QAAM,KACdA,QAAQ,QAAM,KACdA,QAAQ,OAAQ,MAChBC,MAAM,O,wOCPEC,G,MAAwB,CACnC,IACA,MACA,IACA,IACA,IACA,OACA,OACA,QACA,UACA,QCVWC,EAAkB,SAACC,EAAOC,EAASH,GAC9C,OAAKd,MAAMgB,GACG,MAAVA,EAAsB,gBACtBC,IAAqD,IAA1CH,EAAsBI,QAAQF,GACpC,4BAEA,mBALiB,UC+BbG,EAzBA,SAAC,GAAwB,IAAtBH,EAAqB,EAArBA,MAAOI,EAAc,EAAdA,QACjBC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMF,cAC1CG,EAAWC,cACXC,ECVqB,SAACV,EAAOC,EAASH,GAC5C,OAAIG,IAAqD,IAA1CH,EAAsBI,QAAQF,GDSlBW,CACzBX,EACAK,EAAWJ,QACXH,GAEE,kBAAMU,EAASJ,IACf,KAEJ,OACE,4BACEQ,UAAWb,EACTC,EACAK,EAAWJ,QACXH,GAEFe,QAASH,GAERV,IE3BMc,EAAuB,SAACP,EAAOQ,GAC1C,OAAIR,EAAMN,QACD,GAAKc,EAGTR,EAAMS,gBAAgBxC,OAAS,KACU,IAAxC+B,EAAMS,gBAAgBd,QAAQ,MAC/BK,EAAMS,gBAAgBxC,OAAS,KACU,IAAxC+B,EAAMS,gBAAgBd,QAAQ,MAChCK,EAAMjB,OAEFiB,EAAMU,iBAAmBV,EAAMjB,OAEf,MAAdyB,EACK,KAEF,GAAKA,GAGgC,IAAxCR,EAAMS,gBAAgBd,QAAQ,MAA6B,MAAda,EACxCR,EAAMS,gBACe,MAA1BT,EAAMS,gBACU,MAAdD,EACK,KAEA,GAAKA,EAGTR,EAAMS,gBAAkBD,EAI1BR,EAAMS,iBC9BNE,EAAmB,SAACC,EAAQZ,GAAT,MAAoB,CAClDa,KAAM,mBACNC,QAAS,CACPF,SACAH,gBAAiBF,EAAqBP,EAAOY,MAYpCG,EAAgB,SAACC,GAAD,MAAgB,CAC3CH,KAAM,gBACNC,QAAS,CACPE,eCnBSC,EAAiC,SAACC,GAE7C,OADAA,EAAMC,iBACED,EAAME,SAEZ,KAAK,GACH,OAAO,WACLC,EAAmC,IAIvC,KAAK,GACH,OAAO,WACLA,EAAmC,IAIvC,KAAK,GACH,OAAO,WACLA,EAAmC,IAIvC,KAAK,GACH,OAAO,WACLA,EAAmC,IAIvC,KAAK,GACH,OAAO,WACLA,EAAmC,IAIvC,KAAK,GACH,OAAO,WACLA,EAAmC,IAIvC,KAAK,GACH,OAAO,WACLA,EAAmC,IAIvC,KAAK,GACH,OAAO,WACLA,EAAmC,IAIvC,KAAK,GACH,OAAO,WACLA,EAAmC,IAIvC,KAAK,GACH,OAAO,WACLA,EAAmC,IAIvC,KAAK,GACH,OAAO,WACLA,EAAmC,MAIvC,KAAK,GACH,OAAO,WACLA,EAAgC,MAIpC,KAAK,GACH,OAAO,WACLA,EAAgC,MAIpC,KAAK,GACH,OAAO,WACLA,EAAgC,SAIpC,KAAK,GACH,OAAO,WACLA,EAAgC,MAIpC,KAAK,GAML,KAAK,GACH,OAAO,WACLA,EAAgC,MAIpC,KAAK,EAML,KAAK,GAML,KAAK,GACH,OAAO,eCrFEC,EA5BE,WACf,ICPuBtB,EDOjBC,EAAWC,cACXJ,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMF,cAWhD,OATAyB,qBAAU,WAIR,OAHAC,SAASC,iBAAiB,YAAY,SAACP,GAAD,OACpCjB,EAASgB,EAA+BC,OAEnCM,SAASE,oBAAoB,YAAY,SAACR,GAAD,OAC9CjB,EAASgB,EAA+BC,SAEzC,IAGD,6BAASb,UAAU,aCpBEL,EDqBTF,ECpBP,CACL,CACEL,MAAO,IACPkC,SHuCkC,CACtCd,KAAM,sBGtCJ,CACEpB,MAAO,KACPkC,SHAiC,CACrCd,KAAM,qBGCJ,CACEpB,MAAO,IACPkC,SHA2B,CAC/Bd,KAAM,eGCJ,CACEpB,MAAO,SACPkC,SHOqC,CACzCd,KAAM,yBGNJ,CACEpB,MAAO,MACPkC,SHmB8B,CAClCd,KAAM,kBGlBJ,CACEpB,MAAO,QACPkC,SHOgC,CACpCd,KAAM,oBGNJ,CACEpB,MAAO,UACPkC,SHOqC,CACzCd,KAAM,yBGNJ,CACEpB,MAAO,OACPkC,SAAUN,EAAgC,SAE5C,CACE5B,MAAO,IACPkC,SAAUN,EAAmC,EAAGrB,IAElD,CACEP,MAAO,IACPkC,SAAUN,EAAmC,EAAGrB,IAElD,CACEP,MAAO,IACPkC,SAAUN,EAAmC,EAAGrB,IAElD,CACEP,MAAO,OACPkC,SAAUN,EAAgC,SAE5C,CACE5B,MAAO,IACPkC,SAAUN,EAAmC,EAAGrB,IAElD,CACEP,MAAO,IACPkC,SAAUN,EAAmC,EAAGrB,IAElD,CACEP,MAAO,IACPkC,SAAUN,EAAmC,EAAGrB,IAElD,CACEP,MAAO,IACPkC,SAAUN,EAAgC,MAE5C,CACE5B,MAAO,IACPkC,SAAUN,EAAmC,EAAGrB,IAElD,CACEP,MAAO,IACPkC,SAAUN,EAAmC,EAAGrB,IAElD,CACEP,MAAO,IACPkC,SAAUN,EAAmC,EAAGrB,IAElD,CACEP,MAAO,IACPkC,SAAUN,EAAgC,MAE5C,CACE5B,MAAO,MACPkC,SHzD4B,CAChCd,KAAM,gBG0DJ,CACEpB,MAAO,IACPkC,SAAUN,EAAmC,EAAGrB,IAElD,CACEP,MAAO,IACPkC,SAAUN,EAAmC,IAAKrB,IAEpD,CACEP,MAAO,IACPkC,SAAUN,EAAgC,QD3EpBO,KAAI,SAACC,GACzB,OACE,kBAAC,EAAD,CACEC,IAAKD,EAAOpC,MACZA,MAAOoC,EAAOpC,MACdI,QAASgC,EAAOF,gBELbI,G,MAjBC,WACd,ICPiCC,EDO3BlC,EAAaC,aAAY,SAACC,GAAD,OAAWA,EAAMF,cAEhD,OACE,6BAASO,UAAU,WACjB,uBAAGA,UAAU,mBCXgB2B,EDazBlC,EAAWmC,kCAAkCrD,KAAK,MCZzBX,QAAU,GACvC+D,EACA,MAAQA,EAA0BrD,OAAO,KDazC,uBAAG0B,UAAU,gBACOP,EAAWW,gBEhBZpB,QAAQ,iCAAkC,SCapD6C,MATf,WACE,OACE,yBAAK7B,UAAU,OACb,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGc8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gCClBOC,EAAwB,SAACrE,GACpC,OAAOU,WAAWV,EAAOkB,QAAQ,IAAK,OCC3BoD,EAAqC,SAChDR,EACAxB,EACAO,EACAjC,EACA2B,EACAgC,EACAhD,EACAiD,GAEA,OAAIjD,EACK,GAEHgB,EACgB,MAAdM,EAEI,CACJP,GADF,mBAEKiC,EAA6BpD,MAAM,MAFxC,CAGE0B,IAIK,CACyB,MAA9BP,EAAgB9B,OAAO,GACnB8B,EACAA,EAAkB,IACtBO,GAKAjC,EAECN,MACC+D,EACEP,EAAkCtD,OAAO,GAAGC,KAAK,MAS9B,MAAdoC,EAEFiB,EAAkCL,KAAI,SAACpD,EAASW,GAAV,OAC3CA,IAAU8C,EAAkChE,OAAS,EACjDO,EACAwC,KAIA,GAAN,mBACKiB,GADL,CAEExB,EACAO,IAhBE2B,EACK,CAAClC,EAAiBO,GAErB,GAAN,mBAAWiB,GAAX,CAA8CjB,IAmB7CvC,MACC+D,EACEP,EAAkCtD,OAAO,GAAGC,KAAK,MAM/C,GAAN,mBACKqD,GADL,CAEgC,MAA9BxB,EAAgB9B,OAAO,GACnB8B,EACAA,EAAkB,IACtBO,IAPI,GAAN,mBAAWiB,GAAX,CAA8CjB,KCvE3C4B,EAAoC,SAACnC,EAAiB1B,GACjE,OAAKA,EAOI0B,EANHA,EAAgBxC,OAAS,EACpBwC,EAAgB9B,MAAM,GAAI,GAE1B,KAOAkE,EAAqB,SAChCC,EACApC,GAEA,OAAIA,EACK,GAEAoC,GCnBEC,EAAwB,SAACnC,GACpC,OAAQ,GAAKA,GAAQvB,QAAQ,IAAK,MCEvB2D,EAAa,SACxBvC,EACAwB,GAEA,OACGxD,MACC+D,EAAsBP,EAAkCtD,OAAO,GAAGC,KAAK,MAuB1B,IAA3C4D,EAAsB/B,GACjB,CACLwC,UAAWF,GACR,EAAIP,EAAsB/B,IAE7ByC,WAAY,KACZP,eAAe,GAGV,CAAEM,UAAWxC,EAAiBkC,eAAe,GA7B/C,CACLM,UAAWF,GACR,EACCP,EACEP,EAAkCtD,OAAO,GAAGC,KAAK,MAGvDsE,WAAYjB,EAAkCL,KAAI,SAACpD,EAASW,GAAV,OAChDA,IAAU8C,EAAkChE,OAAS,EACjDO,EACAuE,GACG,EACCP,EACEP,EAAkCtD,OAAO,GAAGC,KAAK,SAI7D+D,eAAe,IC1BRQ,EAAiB,SAC5BlB,EACAxB,EACAC,EACAiC,GAEA,GAAIjC,GAAmBuB,EAAkChE,OAAS,EAEhE,MAAO,CACLgF,UAAWF,EACTK,KAAKC,IAAIb,EAAsB/B,GAAkB,IAEnDyC,WAAY,CACVH,EACEK,KAAKC,IAAIb,EAAsB/B,GAAkB,MAIlD,GAAIwB,EAAkChE,OAAS,EAAG,CAEvD,GACEQ,MACE+D,EACEP,EAAkCtD,OAAO,GAAGC,KAAK,MAKrD,MAAO,CACLqE,UAAWF,EACTK,KAAKC,IAAIb,EAAsB/B,GAAkB,IAEnDyC,WAAW,GAAD,mBACLjB,GADK,CAERc,EACEK,KAAKC,IAAIb,EAAsB/B,GAAkB,OAMvD,GAAIkC,EACF,MAAO,CACLM,UAAWF,EACTK,KAAKC,IAAIb,EAAsB/B,GAAkB,IAGnDyC,WAAY,CACVH,EACEK,KAAKC,IAAIb,EAAsB/B,GAAkB,MAKvD,IAAM6C,EAAOrB,EAAkCL,KAAI,SAACpD,EAASW,GAAV,OACjDA,IAAU8C,EAAkChE,OAAS,EACjDO,EACAuE,EAAsBK,KAAKC,IAAIb,EAAsBhE,GAAU,OAErE,MAAO,CACLyE,UAAWK,EAAK3E,OAAO,GAAGC,KAAK,IAC/BsE,WAAYI,KC7DTC,EAAsB,SACjCtB,EACAxB,EACAC,EACAiC,GAEA,GAAIjC,GAAmBuB,EAAkChE,OAAS,EAEhE,OAAIuE,EAAsB/B,IAAoB,EACrC,CACLwC,UAAWF,EACTK,KAAKI,KAAKhB,EAAsB/B,KAElCyC,WAAY,CACVH,EACEK,KAAKI,KAAKhB,EAAsB/B,MAGpCvC,OAAO,GAGF,CACL+E,UAAW,gBACXC,WAAY,CAAC,UAAOzC,EAAkB,KACtCvC,OAAO,GAGN,GAAI+D,EAAkChE,OAAS,EAAG,CAEvD,GACEQ,MACE+D,EACEP,EAAkCtD,OAAO,GAAGC,KAAK,MAKrD,OAAI4D,EAAsB/B,IAAoB,EACrC,CACLwC,UAAWF,EACTK,KAAKI,KAAKhB,EAAsB/B,KAElCyC,WAAW,GAAD,mBACLjB,GADK,CAERc,EACEK,KAAKI,KAAKhB,EAAsB/B,OAGpCvC,OAAO,GAGF,CACL+E,UAAW,gBACXC,WAAW,GAAD,mBACLjB,GADK,CAER,UAAOxB,EAAkB,MAE3BvC,OAAO,GAKX,GAAIyE,EACF,OAAIH,EAAsB/B,IAAoB,EACrC,CACLwC,UAAWF,EACTK,KAAKI,KAAKhB,EAAsB/B,KAGlCyC,WAAY,CACVH,EACEK,KAAKI,KAAKhB,EAAsB/B,MAGpCvC,OAAO,GAGF,CACL+E,UAAW,gBACXC,WAAW,GAAD,mBACLjB,GADK,CAER,UAAOxB,EAAkB,MAE3BvC,OAAO,GAIX,GACEsE,EACEP,EAAkCtD,OAAO,GAAGC,KAAK,MAC9C,EACL,CACA,IAAM0E,EAAOrB,EAAkCL,KAAI,SAACpD,EAASW,GAAV,OACjDA,IAAU8C,EAAkChE,OAAS,EACjDO,EACAuE,EAAsBK,KAAKI,KAAKhB,EAAsBhE,QAE5D,MAAO,CACLyE,UAAWK,EAAK3E,OAAO,GAAGC,KAAK,IAC/BsE,WAAYI,EACZpF,OAAO,GAGT,MAAO,CACL+E,UAAW,gBACXC,WAAYjB,EAAkCL,KAAI,SAACpD,EAASW,GAAV,OAChDA,IAAU8C,EAAkChE,OAAS,EACjDO,EACA,UAAOA,EAAU,OAEvBN,OAAO,KC9GNuF,EAAe,SAC1BxB,EACAxB,EACAC,GAEA,OAA+C,IAA3C8B,EAAsB/B,GACnBC,EAOM,CACHuC,UAAWF,EAAsB,EAAEP,EAAsB/B,IACzDyC,WAAY,CAACH,EAAsB,EAAEP,EAAsB/B,KAC3DvC,OAAO,GATN,CACL+E,UAAWF,EAAsB,EAAEP,EAAsB/B,IACzDyC,WAAW,GAAD,mBAAMjB,GAAN,CAAyCc,EAAsB,EAAEP,EAAsB/B,MACjGvC,OAAO,GAUJ,CACL+E,UAAW,wBACXC,WAAW,GAAD,mBAAMjB,GAAN,CAAyC,UACnD/D,OAAO,ICtBAwF,EAAmB,SAC9BzB,EACAxB,EACAC,EACA3B,GAEA,IAAM4E,EAAkBnB,EAAsB/B,GACxCmD,EAA2BpB,EAC/BP,EAAkCtD,OAAO,GAAGC,KAAK,KAGnD,GAAIqD,EAAkChE,OAAS,EAC7C,MAAO,CACLgF,UAAW,IACXC,WAAY,CAAC,MAIjB,GAAInE,EAAQ,CACV,IAAM8E,EAAmBd,EACvBY,GAAmBA,EAAkB,MAEvC,MAAO,CACLV,UAAWY,EACXX,WAAYxC,EACR,CAACmD,GADsB,sBAEnB5B,GAFmB,CAEgB4B,KAI/C,IAAMC,EAAarF,MAAMmF,GACrB7F,YAAgBkE,EAAkCtD,MAAM,GAAI,IAAIR,OAChEJ,YAAgBkE,EAAkCtD,MAAM,GAAI,IAAIR,OAE9D0F,EAAmBd,EACvBP,EAAsBsB,IAAeH,EAAkB,MAGzD,MAAO,CACLV,UAAWY,EACXX,WAAYzE,MAAMmF,GAAN,sBACJ3B,GADI,CAC+B4B,IACvC5B,EAAkCL,KAAI,SAACpD,EAASW,GAAV,OACpCA,IAAU8C,EAAkChE,OAAS,EACjDO,EACAqF,OC9CP,IAAME,EAAcC,YAAgB,CACzClE,WCKa,WAWZ,IAVDE,EAUA,uDAVQ,CACNS,gBAAiB,IACjBwB,kCAAmC,GACnCS,6BAA8B,GAC9B3D,QAAQ,EACR2B,iBAAiB,EACjBhB,SAAS,EACTiD,eAAe,GAEjBsB,EACA,uCACA,OAAQA,EAAOpD,MAEb,IAAK,mBACH,OAAO,2BACFb,GADL,IAEES,gBAAiBwD,EAAOnD,QAAQL,gBAChCwB,kCACEjC,EAAMN,SAAWM,EAAMU,gBACnB,GACAV,EAAMiC,kCACZlD,QAAQ,EACR2B,iBAAiB,EACjBhB,SAAS,EACTiD,eAAe,IAInB,IAAK,mBACH,OAAO,2BACF3C,GADL,IAEES,gBAAiB,IACjBwB,kCACEjC,EAAMN,SAAWM,EAAMU,gBACnB,GACAV,EAAMiC,kCACZlD,QAAQ,EACR2B,iBAAiB,EACjBgC,6BAA8B1C,EAAMU,gBAChC,GACAV,EAAM0C,6BACVhD,SAAS,EACTiD,eAAe,IAInB,IAAK,aACH,OAAO,2BACF3C,GADL,IAEES,gBAAiB,IACjBwB,kCAAmC,GACnCS,6BAA8B,GAC9B3D,QAAQ,EACR2B,iBAAiB,EACjBhB,SAAS,EACTiD,eAAe,IAInB,IAAK,gBACH,IAAMuB,EAA4CzB,EAChDzC,EAAMiC,kCACNjC,EAAMS,gBACNwD,EAAOnD,QAAQE,UACfhB,EAAMjB,OACNiB,EAAMU,gBACNV,EAAM0C,6BACN1C,EAAMN,QACNM,EAAM2C,eAGFwB,EAAiCpG,YACrCmG,GAGF,OAAO,2BACFlE,GADL,IAEES,gBAAiB0D,EAA+BhG,OAChD8D,kCAAmCiC,EACnCnF,OAC+B,MAA7BkF,EAAOnD,QAAQE,YAAqBhB,EAAMN,QAC5CgB,gBAC+B,MAA7BuD,EAAOnD,QAAQE,YAAsBhB,EAAMN,QAC7CgD,6BAA8BwB,EAC3BvF,OAAO,GAAI,GACXC,KAAK,KACRc,QAASyE,EAA+BjG,MACxCyE,eAAe,IAInB,IAAK,kBACH,IAAMyB,EAAwBjB,EAC5BnD,EAAMiC,kCACNjC,EAAMS,gBACNT,EAAMU,gBACNV,EAAM2C,eAGR,OAAO,2BACF3C,GADL,IAEES,gBAAiB2D,EAAsBnB,UACvChB,kCAAmCmC,EAAsBlB,aAI7D,IAAK,uBACH,IAAMmB,EAA6Bd,EACjCvD,EAAMiC,kCACNjC,EAAMS,gBACNT,EAAMU,gBACNV,EAAM2C,eAGR,OAAO,2BACF3C,GADL,IAEES,gBAAiB4D,EAA2BpB,UAC5ChB,kCACEoC,EAA2BnB,WAC7BxD,QAAS2E,EAA2BnG,QAIxC,IAAK,gBACH,IAAMoG,EAAsBb,EAC1BzD,EAAMiC,kCACNjC,EAAMS,gBACNT,EAAMU,iBAER,OAAO,2BACFV,GADL,IAEES,gBAAiB6D,EAAoBrB,UACrChB,kCAAmCqC,EAAoBpB,WACvDxD,QAAS4E,EAAoBpG,QAIjC,IAAK,oBACH,IAAMqG,EAA0Bb,EAC9B1D,EAAMiC,kCACNjC,EAAMS,gBACNT,EAAMU,gBACNV,EAAMjB,QAER,OAAO,2BACFiB,GADL,IAEES,gBAAiB8D,EAAwBtB,UACzChB,kCAAmCsC,EAAwBrB,aAI/D,IAAK,uBACH,OAAO,2BACFlD,GADL,IAEES,gBAAiBT,EAAMN,QACnB,IACA8E,EACExE,EAAMS,gBACNT,EAAMjB,QAEZkD,kCAAmCjC,EAAMN,QACrC,GACA8E,EACExE,EAAMiC,kCACNjC,EAAMU,iBAEZhB,SAAS,EACTiD,eAAe,IAInB,IAAK,cACH,IAAM8B,EAAoBzB,EACxBhD,EAAMS,gBACNT,EAAMiC,mCAER,OAAO,2BACFjC,GADL,IAEES,gBAAiBgE,EAAkBxB,UACnChB,kCACmC,OAAjCwC,EAAkBvB,WACduB,EAAkBvB,WAClBlD,EAAMiC,kCACZU,cAAe8B,EAAkB9B,gBAGrC,QACE,OAAO3C,MChME0E,EAFDC,YAAYZ,EAAa3B,OAAOwC,8BAAgCxC,OAAOwC,gCCKrFC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,QAGJlD,SAASwD,eAAe,SbqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.fff4c4d5.chunk.js","sourcesContent":["import { checkDivideError } from \"./checkDivideError\";\r\nimport { formatOperationArray } from \"./formatOperationsArray\";\r\n\r\nexport const calculateResult = (operationsArray) => {\r\n  if (operationsArray.length < 1) {\r\n    //  operationsArray is empty\r\n    return {\r\n      error: false,\r\n      string: \"0\",\r\n    };\r\n  } else {\r\n    //  operationsArray isn't empty\r\n    const changedSignsArray = formatOperationArray(operationsArray);\r\n\r\n    const arrayOfNumbers = changedSignsArray.filter(\r\n      (element) => !isNaN(element)\r\n    );\r\n\r\n    const arrayOfSigns = changedSignsArray.filter((element) => isNaN(element));\r\n\r\n    if (\r\n      arrayOfSigns.slice(-2, -1).join(\"\") === \"/\" &&\r\n      parseFloat(arrayOfNumbers.slice(-1)) === 0\r\n    ) {\r\n      return checkDivideError(arrayOfNumbers);\r\n    } else {\r\n      const result =\r\n        \"\" +\r\n        arrayOfNumbers.reduce((prev, current, index) => {\r\n          // eslint-disable-next-line no-eval\r\n          return eval(\"\" + prev + arrayOfSigns[index - 1] + current);\r\n        });\r\n\r\n      return {\r\n        error: false,\r\n        string: result.replace(\".\", \",\"),\r\n      };\r\n    }\r\n  }\r\n};\r\n","export const checkDivideError = (arrayOfNumbers) => {\r\n  if (parseFloat(arrayOfNumbers.slice(-2, -1)) === 0) {\r\n    return { error: true, string: \"Undefined result\" };\r\n  } else {\r\n    return { error: true, string: \"Do not divide by zero\" };\r\n  }\r\n};\r\n","export const formatOperationArray = (operationsArray) => {\r\n  return operationsArray\r\n    .join(\" \")\r\n    .replace(/,/g, \".\")\r\n    .replace(/×/g, \"*\")\r\n    .replace(/÷/g, \"/\")\r\n    .replace(/- -/g, \"+ \")\r\n    .split(\" \");\r\n};\r\n","export const buttonsToDisableArray = [\r\n  \"%\",\r\n  \"+/-\",\r\n  \",\",\r\n  \"+\",\r\n  \"-\",\r\n  \"×\",\r\n  \"÷\",\r\n  \"x²\",\r\n  \"√x\",\r\n  \"1/x\",\r\n];\r\n","export const buttonClassName = (value, isError, buttonsToDisableArray) => {\r\n  if (!isNaN(value)) return \"button\";\r\n  if (value === \"=\") return \"button result\";\r\n  if (isError && buttonsToDisableArray.indexOf(value) !== -1) {\r\n    return \"button operation disabled\";\r\n  } else {\r\n    return \"button operation\";\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport \"./button.scss\";\r\nimport { buttonsToDisableArray } from \"./consts/buttonsToDisableArray\";\r\nimport { buttonClassName } from \"./helpers/createClassName\";\r\nimport { buttonOnClick } from \"./helpers/createOnClick\";\r\n\r\nconst Button = ({ value, onclick }) => {\r\n  const calculator = useSelector((state) => state.calculator);\r\n  const dispatch = useDispatch();\r\n  const buttonOnClickValue = buttonOnClick(\r\n    value,\r\n    calculator.isError,\r\n    buttonsToDisableArray\r\n  )\r\n    ? () => dispatch(onclick)\r\n    : null;\r\n\r\n  return (\r\n    <button\r\n      className={buttonClassName(\r\n        value,\r\n        calculator.isError,\r\n        buttonsToDisableArray\r\n      )}\r\n      onClick={buttonOnClickValue}\r\n    >\r\n      {value}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","export const buttonOnClick = (value, isError, buttonsToDisableArray) => {\r\n  if (isError && buttonsToDisableArray.indexOf(value) !== -1) {\r\n    return false;\r\n  } else return true;\r\n};\r\n","export const verifyNumberOnChange = (state, newNumber) => {\r\n  if (state.isError) {\r\n    return \"\" + newNumber;\r\n  } else {\r\n    if (\r\n      (state.mainValueString.length < 17 &&\r\n        state.mainValueString.indexOf(\",\") !== -1) ||\r\n      (state.mainValueString.length < 16 &&\r\n        state.mainValueString.indexOf(\",\") === -1) ||\r\n      state.result\r\n    ) {\r\n      if (state.isEqualSignUsed || state.result) {\r\n        //  clear big display\r\n        if (newNumber === \",\") {\r\n          return \"0,\";\r\n        }\r\n        return \"\" + newNumber;\r\n      } else {\r\n        //  add next sign\r\n        if (state.mainValueString.indexOf(\",\") !== -1 && newNumber === \",\")\r\n          return state.mainValueString;\r\n        if (state.mainValueString === \"0\") {\r\n          if (newNumber === \",\") {\r\n            return \"0,\";\r\n          } else {\r\n            return \"\" + newNumber;\r\n          }\r\n        }\r\n        return state.mainValueString + newNumber;\r\n      }\r\n    } else {\r\n      //  Cannot be longer\r\n      return state.mainValueString;\r\n    }\r\n  }\r\n};\r\n","import { verifyNumberOnChange } from \"../helpers/verifyNumberOnChange\";\r\n\r\nexport const mainValueChanged = (number, state) => ({\r\n  type: \"mainValueChanged\",\r\n  payload: {\r\n    number,\r\n    mainValueString: verifyNumberOnChange(state, number),\r\n  },\r\n});\r\n\r\nexport const mainValueCleared = () => ({\r\n  type: \"mainValueCleared\",\r\n});\r\n\r\nexport const allCleared = () => ({\r\n  type: \"allCleared\",\r\n});\r\n\r\nexport const operationDone = (operation) => ({\r\n  type: \"operationDone\",\r\n  payload: {\r\n    operation,\r\n  },\r\n});\r\n\r\nexport const lastCharacterDeleted = () => ({\r\n  type: \"lastCharacterDeleted\",\r\n});\r\n\r\nexport const signChanged = () => ({\r\n  type: \"signChanged\",\r\n});\r\n\r\nexport const powerCalculated = () => ({\r\n  type: \"powerCalculated\",\r\n});\r\n\r\nexport const squareRootCalculated = () => ({\r\n  type: \"squareRootCalculated\",\r\n});\r\n\r\nexport const oneByXDivided = () => ({\r\n  type: \"oneByXDivided\",\r\n});\r\n\r\nexport const percentCalculated = () => ({\r\n  type: \"percentCalculated\",\r\n});\r\n","import * as calculatorActions from \"../../../actions/calculatorActions\";\r\n\r\nexport const handleFunctionToCallOnKeyPress = (event) => {\r\n  event.preventDefault();\r\n  switch (event.keyCode) {\r\n    //    1\r\n    case 49:\r\n      return () => {\r\n        calculatorActions.mainValueChanged(1);\r\n      };\r\n\r\n    //    2\r\n    case 50:\r\n      return () => {\r\n        calculatorActions.mainValueChanged(2);\r\n      };\r\n\r\n    //    3\r\n    case 51:\r\n      return () => {\r\n        calculatorActions.mainValueChanged(3);\r\n      };\r\n\r\n    //    4\r\n    case 52:\r\n      return () => {\r\n        calculatorActions.mainValueChanged(4);\r\n      };\r\n\r\n    //    5\r\n    case 53:\r\n      return () => {\r\n        calculatorActions.mainValueChanged(5);\r\n      };\r\n\r\n    //    6\r\n    case 54:\r\n      return () => {\r\n        calculatorActions.mainValueChanged(6);\r\n      };\r\n\r\n    //    7\r\n    case 55:\r\n      return () => {\r\n        calculatorActions.mainValueChanged(7);\r\n      };\r\n\r\n    //    8\r\n    case 56:\r\n      return () => {\r\n        calculatorActions.mainValueChanged(8);\r\n      };\r\n\r\n    //    9\r\n    case 57:\r\n      return () => {\r\n        calculatorActions.mainValueChanged(9);\r\n      };\r\n\r\n    //    0\r\n    case 48:\r\n      return () => {\r\n        calculatorActions.mainValueChanged(0);\r\n      };\r\n\r\n    //    ,\r\n    case 44:\r\n      return () => {\r\n        calculatorActions.mainValueChanged(\",\");\r\n      };\r\n\r\n    //    +\r\n    case 43:\r\n      return () => {\r\n        calculatorActions.operationDone(\"+\");\r\n      };\r\n\r\n    //    -\r\n    case 45:\r\n      return () => {\r\n        calculatorActions.operationDone(\"-\");\r\n      };\r\n\r\n    //    *\r\n    case 42:\r\n      return () => {\r\n        calculatorActions.operationDone(\"×\");\r\n      };\r\n\r\n    //    /\r\n    case 47:\r\n      return () => {\r\n        calculatorActions.operationDone(\"/\");\r\n      };\r\n\r\n    //    enter\r\n    case 13:\r\n      return () => {\r\n        calculatorActions.operationDone(\"=\");\r\n      };\r\n\r\n    //    =\r\n    case 61:\r\n      return () => {\r\n        calculatorActions.operationDone(\"=\");\r\n      };\r\n\r\n    //    backspace\r\n    case 8:\r\n      return () => {\r\n        calculatorActions.lastCharacterDeleted();\r\n      };\r\n\r\n    //    esc (C)\r\n    case 27:\r\n      return () => {\r\n        calculatorActions.allCleared();\r\n      };\r\n\r\n    //    delete (CE)\r\n    case 46:\r\n      return () => {\r\n        calculatorActions.mainValueCleared();\r\n      };\r\n\r\n    default:\r\n      break;\r\n  }\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useEffect } from \"react\";\r\nimport \"./keyboard.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Button from \"../../component/button/button\";\r\nimport { handleFunctionToCallOnKeyPress } from \"./helpers/handleFunctionToCallOnKeyPress\";\r\nimport { keyboard } from \"./helpers/keyboardArray\";\r\n\r\nconst Keyboard = () => {\r\n  const dispatch = useDispatch();\r\n  const calculator = useSelector((state) => state.calculator);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"keypress\", (event) =>\r\n      dispatch(handleFunctionToCallOnKeyPress(event))\r\n    );\r\n    return document.removeEventListener(\"keypress\", (event) =>\r\n      dispatch(handleFunctionToCallOnKeyPress(event))\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"keyboard\">\r\n      {keyboard(calculator).map((button) => {\r\n        return (\r\n          <Button\r\n            key={button.value}\r\n            value={button.value}\r\n            onclick={button.function}\r\n          />\r\n        );\r\n      })}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Keyboard;\r\n","import * as calculatorActions from \"../../../actions/calculatorActions\";\r\n\r\nexport const keyboard = (state) => {\r\n  return [\r\n    {\r\n      value: \"%\",\r\n      function: calculatorActions.percentCalculated(),\r\n    },\r\n    {\r\n      value: \"CE\",\r\n      function: calculatorActions.mainValueCleared(),\r\n    },\r\n    {\r\n      value: \"C\",\r\n      function: calculatorActions.allCleared(),\r\n    },\r\n    {\r\n      value: \"⊲\",\r\n      function: calculatorActions.lastCharacterDeleted(),\r\n    },\r\n    {\r\n      value: \"1/x\",\r\n      function: calculatorActions.oneByXDivided(),\r\n    },\r\n    {\r\n      value: \"x²\",\r\n      function: calculatorActions.powerCalculated(),\r\n    },\r\n    {\r\n      value: \"√x\",\r\n      function: calculatorActions.squareRootCalculated(),\r\n    },\r\n    {\r\n      value: \"÷\",\r\n      function: calculatorActions.operationDone(\"÷\"),\r\n    },\r\n    {\r\n      value: \"7\",\r\n      function: calculatorActions.mainValueChanged(7, state),\r\n    },\r\n    {\r\n      value: \"8\",\r\n      function: calculatorActions.mainValueChanged(8, state),\r\n    },\r\n    {\r\n      value: \"9\",\r\n      function: calculatorActions.mainValueChanged(9, state),\r\n    },\r\n    {\r\n      value: \"×\",\r\n      function: calculatorActions.operationDone(\"×\"),\r\n    },\r\n    {\r\n      value: \"4\",\r\n      function: calculatorActions.mainValueChanged(4, state),\r\n    },\r\n    {\r\n      value: \"5\",\r\n      function: calculatorActions.mainValueChanged(5, state),\r\n    },\r\n    {\r\n      value: \"6\",\r\n      function: calculatorActions.mainValueChanged(6, state),\r\n    },\r\n    {\r\n      value: \"-\",\r\n      function: calculatorActions.operationDone(\"-\"),\r\n    },\r\n    {\r\n      value: \"1\",\r\n      function: calculatorActions.mainValueChanged(1, state),\r\n    },\r\n    {\r\n      value: \"2\",\r\n      function: calculatorActions.mainValueChanged(2, state),\r\n    },\r\n    {\r\n      value: \"3\",\r\n      function: calculatorActions.mainValueChanged(3, state),\r\n    },\r\n    {\r\n      value: \"+\",\r\n      function: calculatorActions.operationDone(\"+\"),\r\n    },\r\n    {\r\n      value: \"+/-\",\r\n      function: calculatorActions.signChanged(),\r\n    },\r\n    {\r\n      value: \"0\",\r\n      function: calculatorActions.mainValueChanged(0, state),\r\n    },\r\n    {\r\n      value: \",\",\r\n      function: calculatorActions.mainValueChanged(\",\", state),\r\n    },\r\n    {\r\n      value: \"=\",\r\n      function: calculatorActions.operationDone(\"=\"),\r\n    },\r\n  ];\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./display.scss\";\r\nimport { formatBigDisplay } from \"./helpers/formatBigDisplay\";\r\nimport { formatSmallDisplay } from \"./helpers/formatSmallDisplay\";\r\n\r\nconst Display = () => {\r\n  const calculator = useSelector((state) => state.calculator);\r\n\r\n  return (\r\n    <section className=\"display\">\r\n      <p className=\"display__small\">\r\n        {formatSmallDisplay(\r\n          calculator.historyOfOperationsArrayOfStrings.join(\" \")\r\n        )}\r\n      </p>\r\n      <p className=\"display__big\">\r\n        {formatBigDisplay(calculator.mainValueString)}\r\n      </p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Display;\r\n","export const formatSmallDisplay = (historyOfOperationsString) => {\r\n  return historyOfOperationsString.length <= 40\r\n    ? historyOfOperationsString\r\n    : \"...\" + historyOfOperationsString.slice(-40);\r\n};\r\n","export const formatBigDisplay = (mainValueString) => {\r\n  return mainValueString.replace(/\\B(?<!,\\d*)(?=(\\d{3})+(?!\\d))/g, \" \");\r\n};\r\n","import React from \"react\";\r\nimport \"./App.scss\";\r\nimport Keyboard from \"./containers/keyboard/keyboard\";\r\nimport Display from \"./containers/display/display\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Display />\r\n      <Keyboard />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const convertStringToNumber = (string) => {\r\n  return parseFloat(string.replace(\",\", \".\"));\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\n\r\nexport const createNewHistoryOfOperationsObject = (\r\n  historyOfOperationsArrayOfStrings,\r\n  mainValueString,\r\n  operation,\r\n  result,\r\n  isEqualSignUsed,\r\n  lastNumberAndOperationString,\r\n  isError,\r\n  isSignChanged\r\n) => {\r\n  if (isError) {\r\n    return [];\r\n  } else {\r\n    if (isEqualSignUsed) {\r\n      if (operation === \"=\") {\r\n        //  =\r\n        return [\r\n          mainValueString,\r\n          ...lastNumberAndOperationString.split(\" \"),\r\n          operation,\r\n        ];\r\n      } else {\r\n        //  +, -, *, /\r\n        return [\r\n          mainValueString.slice(-1) !== \",\"\r\n            ? mainValueString\r\n            : mainValueString + \"0\",\r\n          operation,\r\n        ];\r\n      }\r\n    } else {\r\n      //  !isEqualSignUsed\r\n      if (result) {\r\n        if (\r\n          !isNaN(\r\n            convertStringToNumber(\r\n              historyOfOperationsArrayOfStrings.slice(-1).join(\"\")\r\n            )\r\n          )\r\n        ) {\r\n          //  number\r\n          if (isSignChanged) {\r\n            return [mainValueString, operation];\r\n          }\r\n          return [...historyOfOperationsArrayOfStrings, operation];\r\n        } else if (operation !== \"=\") {\r\n          //  +, -, *, /\r\n          return historyOfOperationsArrayOfStrings.map((element, index) =>\r\n            index !== historyOfOperationsArrayOfStrings.length - 1\r\n              ? element\r\n              : operation\r\n          );\r\n        } else {\r\n          //  =\r\n          return [\r\n            ...historyOfOperationsArrayOfStrings,\r\n            mainValueString,\r\n            operation,\r\n          ];\r\n        }\r\n      } else {\r\n        //  !result\r\n        if (\r\n          !isNaN(\r\n            convertStringToNumber(\r\n              historyOfOperationsArrayOfStrings.slice(-1).join(\"\")\r\n            )\r\n          )\r\n        ) {\r\n          return [...historyOfOperationsArrayOfStrings, operation];\r\n        } else {\r\n          return [\r\n            ...historyOfOperationsArrayOfStrings,\r\n            mainValueString.slice(-1) !== \",\"\r\n              ? mainValueString\r\n              : mainValueString + \"0\",\r\n            operation,\r\n          ];\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","export const deleteLastCharacterFromBigDisplay = (mainValueString, result) => {\r\n  if (!result) {\r\n    if (mainValueString.length > 1) {\r\n      return mainValueString.slice(0, -1);\r\n    } else {\r\n      return \"0\";\r\n    }\r\n  } else {\r\n    return mainValueString;\r\n  }\r\n};\r\n\r\nexport const deleteSmallDisplay = (\r\n  historyOfOperationsArray,\r\n  isEqualSignUsed\r\n) => {\r\n  if (isEqualSignUsed) {\r\n    return [];\r\n  } else {\r\n    return historyOfOperationsArray;\r\n  }\r\n};\r\n","export const convertNumberToString = (number) => {\r\n  return (\"\" + number).replace(\".\", \",\");\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { convertNumberToString } from \"./convertNumberToString\";\r\n\r\nexport const changeSign = (\r\n  mainValueString,\r\n  historyOfOperationsArrayOfStrings\r\n) => {\r\n  if (\r\n    !isNaN(\r\n      convertStringToNumber(historyOfOperationsArrayOfStrings.slice(-1).join(\"\"))\r\n    )\r\n  ) {\r\n    return {\r\n      bigString: convertNumberToString(\r\n        -1 *\r\n          convertStringToNumber(\r\n            historyOfOperationsArrayOfStrings.slice(-1).join(\"\")\r\n          )\r\n      ),\r\n      smallArray: historyOfOperationsArrayOfStrings.map((element, index) =>\r\n        index !== historyOfOperationsArrayOfStrings.length - 1\r\n          ? element\r\n          : convertNumberToString(\r\n              -1 *\r\n                convertStringToNumber(\r\n                  historyOfOperationsArrayOfStrings.slice(-1).join(\"\")\r\n                )\r\n            )\r\n      ),\r\n      isSignChanged: true,\r\n    };\r\n  } else {\r\n    if (convertStringToNumber(mainValueString) !== 0) {\r\n      return {\r\n        bigString: convertNumberToString(\r\n          -1 * convertStringToNumber(mainValueString)\r\n        ),\r\n        smallArray: null,\r\n        isSignChanged: true,\r\n      };\r\n    } else {\r\n      return { bigString: mainValueString, isSignChanged: false };\r\n    }\r\n  }\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { convertNumberToString } from \"./convertNumberToString\";\r\n\r\nexport const calculatePower = (\r\n  historyOfOperationsArrayOfStrings,\r\n  mainValueString,\r\n  isEqualSignUsed,\r\n  isSignChanged\r\n) => {\r\n  if (isEqualSignUsed || historyOfOperationsArrayOfStrings.length < 1) {\r\n    //  \"=\" used or empty array\r\n    return {\r\n      bigString: convertNumberToString(\r\n        Math.pow(convertStringToNumber(mainValueString), 2)\r\n      ),\r\n      smallArray: [\r\n        convertNumberToString(\r\n          Math.pow(convertStringToNumber(mainValueString), 2)\r\n        ),\r\n      ],\r\n    };\r\n  } else if (historyOfOperationsArrayOfStrings.length > 0) {\r\n    //  it's not a empty array\r\n    if (\r\n      isNaN(\r\n        convertStringToNumber(\r\n          historyOfOperationsArrayOfStrings.slice(-1).join(\"\")\r\n        )\r\n      )\r\n    ) {\r\n      //  last character isn't number\r\n      return {\r\n        bigString: convertNumberToString(\r\n          Math.pow(convertStringToNumber(mainValueString), 2)\r\n        ),\r\n        smallArray: [\r\n          ...historyOfOperationsArrayOfStrings,\r\n          convertNumberToString(\r\n            Math.pow(convertStringToNumber(mainValueString), 2)\r\n          ),\r\n        ],\r\n      };\r\n    } else {\r\n      //  last character is number\r\n      if (isSignChanged) {\r\n        return {\r\n          bigString: convertNumberToString(\r\n            Math.pow(convertStringToNumber(mainValueString), 2)\r\n          ),\r\n\r\n          smallArray: [\r\n            convertNumberToString(\r\n              Math.pow(convertStringToNumber(mainValueString), 2)\r\n            ),\r\n          ],\r\n        };\r\n      } else {\r\n        const temp = historyOfOperationsArrayOfStrings.map((element, index) =>\r\n          index !== historyOfOperationsArrayOfStrings.length - 1\r\n            ? element\r\n            : convertNumberToString(Math.pow(convertStringToNumber(element), 2))\r\n        );\r\n        return {\r\n          bigString: temp.slice(-1).join(\"\"),\r\n          smallArray: temp,\r\n        };\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { convertNumberToString } from \"./convertNumberToString\";\r\n\r\nexport const calculateSquareRoot = (\r\n  historyOfOperationsArrayOfStrings,\r\n  mainValueString,\r\n  isEqualSignUsed,\r\n  isSignChanged\r\n) => {\r\n  if (isEqualSignUsed || historyOfOperationsArrayOfStrings.length < 1) {\r\n    //  \"=\" used or empty array\r\n    if (convertStringToNumber(mainValueString) >= 0) {\r\n      return {\r\n        bigString: convertNumberToString(\r\n          Math.sqrt(convertStringToNumber(mainValueString))\r\n        ),\r\n        smallArray: [\r\n          convertNumberToString(\r\n            Math.sqrt(convertStringToNumber(mainValueString))\r\n          ),\r\n        ],\r\n        error: false,\r\n      };\r\n    } else {\r\n      return {\r\n        bigString: \"Invalid input\",\r\n        smallArray: [\"√(\" + mainValueString + \")\"],\r\n        error: true,\r\n      };\r\n    }\r\n  } else if (historyOfOperationsArrayOfStrings.length > 0) {\r\n    //  it's not a empty array\r\n    if (\r\n      isNaN(\r\n        convertStringToNumber(\r\n          historyOfOperationsArrayOfStrings.slice(-1).join(\"\")\r\n        )\r\n      )\r\n    ) {\r\n      //  last character isn't number\r\n      if (convertStringToNumber(mainValueString) >= 0) {\r\n        return {\r\n          bigString: convertNumberToString(\r\n            Math.sqrt(convertStringToNumber(mainValueString))\r\n          ),\r\n          smallArray: [\r\n            ...historyOfOperationsArrayOfStrings,\r\n            convertNumberToString(\r\n              Math.sqrt(convertStringToNumber(mainValueString))\r\n            ),\r\n          ],\r\n          error: false,\r\n        };\r\n      } else {\r\n        return {\r\n          bigString: \"Invalid input\",\r\n          smallArray: [\r\n            ...historyOfOperationsArrayOfStrings,\r\n            \"√(\" + mainValueString + \")\",\r\n          ],\r\n          error: true,\r\n        };\r\n      }\r\n    } else {\r\n      //  last character is number\r\n      if (isSignChanged) {\r\n        if (convertStringToNumber(mainValueString) >= 0) {\r\n          return {\r\n            bigString: convertNumberToString(\r\n              Math.sqrt(convertStringToNumber(mainValueString))\r\n            ),\r\n\r\n            smallArray: [\r\n              convertNumberToString(\r\n                Math.sqrt(convertStringToNumber(mainValueString))\r\n              ),\r\n            ],\r\n            error: false,\r\n          };\r\n        } else {\r\n          return {\r\n            bigString: \"Invalid input\",\r\n            smallArray: [\r\n              ...historyOfOperationsArrayOfStrings,\r\n              \"√(\" + mainValueString + \")\",\r\n            ],\r\n            error: true,\r\n          };\r\n        }\r\n      } else {\r\n        if (\r\n          convertStringToNumber(\r\n            historyOfOperationsArrayOfStrings.slice(-1).join(\"\")\r\n          ) >= 0\r\n        ) {\r\n          const temp = historyOfOperationsArrayOfStrings.map((element, index) =>\r\n            index !== historyOfOperationsArrayOfStrings.length - 1\r\n              ? element\r\n              : convertNumberToString(Math.sqrt(convertStringToNumber(element)))\r\n          );\r\n          return {\r\n            bigString: temp.slice(-1).join(\"\"),\r\n            smallArray: temp,\r\n            error: false,\r\n          };\r\n        } else {\r\n          return {\r\n            bigString: \"Invalid input\",\r\n            smallArray: historyOfOperationsArrayOfStrings.map((element, index) =>\r\n              index !== historyOfOperationsArrayOfStrings.length - 1\r\n                ? element\r\n                : \"√(\" + element + \")\"\r\n            ),\r\n            error: true,\r\n          };\r\n        }\r\n      }\r\n    }\r\n  }\r\n};\r\n","import { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { convertNumberToString } from \"./convertNumberToString\";\r\n\r\nexport const divideOneByX = (\r\n  historyOfOperationsArrayOfStrings,\r\n  mainValueString,\r\n  isEqualSignUsed\r\n) => {\r\n  if (convertStringToNumber(mainValueString) !== 0) {\r\n    if (!isEqualSignUsed) {\r\n      return {\r\n        bigString: convertNumberToString(1/convertStringToNumber(mainValueString)),\r\n        smallArray: [...historyOfOperationsArrayOfStrings, convertNumberToString(1/convertStringToNumber(mainValueString))],\r\n        error: false,\r\n      };\r\n    } else {\r\n        return {\r\n            bigString: convertNumberToString(1/convertStringToNumber(mainValueString)),\r\n            smallArray: [convertNumberToString(1/convertStringToNumber(mainValueString))],\r\n            error: false,\r\n          };\r\n    }\r\n  } else {\r\n    return {\r\n      bigString: \"Do not divide by zero\",\r\n      smallArray: [...historyOfOperationsArrayOfStrings, \"1/(0)\"],\r\n      error: true,\r\n    };\r\n  }\r\n};\r\n","import { convertNumberToString } from \"./convertNumberToString\";\r\nimport { convertStringToNumber } from \"./convertStringToNumber\";\r\nimport { calculateResult } from \"./calculateResult\";\r\n\r\nexport const calculatePercent = (\r\n  historyOfOperationsArrayOfStrings,\r\n  mainValueString,\r\n  isEqualSignUsed,\r\n  result\r\n) => {\r\n  const mainValueNumber = convertStringToNumber(mainValueString);\r\n  const lastFromSmallArrayNumber = convertStringToNumber(\r\n    historyOfOperationsArrayOfStrings.slice(-1).join(\"\")\r\n  );\r\n\r\n  if (historyOfOperationsArrayOfStrings.length < 1) {\r\n    return {\r\n      bigString: \"0\",\r\n      smallArray: [\"0\"],\r\n    };\r\n  }\r\n\r\n  if (result) {\r\n    const calculatedString = convertNumberToString(\r\n      mainValueNumber * (mainValueNumber / 100)\r\n    );\r\n    return {\r\n      bigString: calculatedString,\r\n      smallArray: isEqualSignUsed\r\n        ? [calculatedString]\r\n        : [...historyOfOperationsArrayOfStrings, calculatedString],\r\n    };\r\n  }\r\n\r\n  const prevResult = isNaN(lastFromSmallArrayNumber)\r\n    ? calculateResult(historyOfOperationsArrayOfStrings.slice(0, -1)).string\r\n    : calculateResult(historyOfOperationsArrayOfStrings.slice(0, -2)).string;\r\n\r\n  const calculatedString = convertNumberToString(\r\n    convertStringToNumber(prevResult) * (mainValueNumber / 100)\r\n  );\r\n\r\n  return {\r\n    bigString: calculatedString,\r\n    smallArray: isNaN(lastFromSmallArrayNumber)\r\n      ? [...historyOfOperationsArrayOfStrings, calculatedString]\r\n      : historyOfOperationsArrayOfStrings.map((element, index) =>\r\n          index !== historyOfOperationsArrayOfStrings.length - 1\r\n            ? element\r\n            : calculatedString\r\n        ),\r\n  };\r\n};\r\n","import calculateReducer from \"./calculatorReducer\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  calculator: calculateReducer,\r\n});\r\n","import { calculateResult } from \"../helpers/calculateResult\";\r\nimport { createNewHistoryOfOperationsObject } from \"../helpers/createNewHistoryOfOperationsObject\";\r\nimport * as deleteLastCharacter from \"../helpers/deleteLastCharacter\";\r\nimport { changeSign } from \"../helpers/changeSign\";\r\nimport { calculatePower } from \"../helpers/calculatePower\";\r\nimport { calculateSquareRoot } from \"../helpers/calculateSquareRoot\";\r\nimport { divideOneByX } from \"../helpers/divideOneByX\";\r\nimport { calculatePercent } from \"../helpers/calculatePercent\";\r\n\r\nexport default function calculateReducer(\r\n  state = {\r\n    mainValueString: \"0\",\r\n    historyOfOperationsArrayOfStrings: [],\r\n    lastNumberAndOperationString: \"\",\r\n    result: false,\r\n    isEqualSignUsed: false,\r\n    isError: false,\r\n    isSignChanged: false,\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    //  1, 2, 3, 4, 5, 6, 7, 8, 9, 0, \",\" --- done\r\n    case \"mainValueChanged\":\r\n      return {\r\n        ...state,\r\n        mainValueString: action.payload.mainValueString,\r\n        historyOfOperationsArrayOfStrings:\r\n          state.isError || state.isEqualSignUsed\r\n            ? []\r\n            : state.historyOfOperationsArrayOfStrings,\r\n        result: false,\r\n        isEqualSignUsed: false,\r\n        isError: false,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    //  CE --- function to action\r\n    case \"mainValueCleared\":\r\n      return {\r\n        ...state,\r\n        mainValueString: \"0\",\r\n        historyOfOperationsArrayOfStrings:\r\n          state.isError || state.isEqualSignUsed\r\n            ? []\r\n            : state.historyOfOperationsArrayOfStrings,\r\n        result: false,\r\n        isEqualSignUsed: false,\r\n        lastNumberAndOperationString: state.isEqualSignUsed\r\n          ? \"\"\r\n          : state.lastNumberAndOperationString,\r\n        isError: false,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    //  C --- done\r\n    case \"allCleared\":\r\n      return {\r\n        ...state,\r\n        mainValueString: \"0\",\r\n        historyOfOperationsArrayOfStrings: [],\r\n        lastNumberAndOperationString: \"\",\r\n        result: false,\r\n        isEqualSignUsed: false,\r\n        isError: false,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    //  +, -, *, /, = --- function to action\r\n    case \"operationDone\":\r\n      const newSmallDisplayValuesObjectArrayWithError = createNewHistoryOfOperationsObject(\r\n        state.historyOfOperationsArrayOfStrings,\r\n        state.mainValueString,\r\n        action.payload.operation,\r\n        state.result,\r\n        state.isEqualSignUsed,\r\n        state.lastNumberAndOperationString,\r\n        state.isError,\r\n        state.isSignChanged\r\n      );\r\n\r\n      const calculatedResultAndErrorObject = calculateResult(\r\n        newSmallDisplayValuesObjectArrayWithError\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        mainValueString: calculatedResultAndErrorObject.string,\r\n        historyOfOperationsArrayOfStrings: newSmallDisplayValuesObjectArrayWithError,\r\n        result:\r\n          action.payload.operation === \"=\" && state.isError ? false : true,\r\n        isEqualSignUsed:\r\n          action.payload.operation === \"=\" && !state.isError ? true : false,\r\n        lastNumberAndOperationString: newSmallDisplayValuesObjectArrayWithError\r\n          .slice(-3, -1)\r\n          .join(\" \"),\r\n        isError: calculatedResultAndErrorObject.error,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    //  sqr --- function to action\r\n    case \"powerCalculated\":\r\n      const calculatedPowerObject = calculatePower(\r\n        state.historyOfOperationsArrayOfStrings,\r\n        state.mainValueString,\r\n        state.isEqualSignUsed,\r\n        state.isSignChanged\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        mainValueString: calculatedPowerObject.bigString,\r\n        historyOfOperationsArrayOfStrings: calculatedPowerObject.smallArray,\r\n      };\r\n\r\n    //  sqrt --- function to action\r\n    case \"squareRootCalculated\":\r\n      const calculatedSquareRootObject = calculateSquareRoot(\r\n        state.historyOfOperationsArrayOfStrings,\r\n        state.mainValueString,\r\n        state.isEqualSignUsed,\r\n        state.isSignChanged\r\n      );\r\n\r\n      return {\r\n        ...state,\r\n        mainValueString: calculatedSquareRootObject.bigString,\r\n        historyOfOperationsArrayOfStrings:\r\n          calculatedSquareRootObject.smallArray,\r\n        isError: calculatedSquareRootObject.error,\r\n      };\r\n\r\n    //  1/x --- function to action\r\n    case \"oneByXDivided\":\r\n      const oneByXDividedObject = divideOneByX(\r\n        state.historyOfOperationsArrayOfStrings,\r\n        state.mainValueString,\r\n        state.isEqualSignUsed\r\n      );\r\n      return {\r\n        ...state,\r\n        mainValueString: oneByXDividedObject.bigString,\r\n        historyOfOperationsArrayOfStrings: oneByXDividedObject.smallArray,\r\n        isError: oneByXDividedObject.error,\r\n      };\r\n\r\n    //  % --- function to action\r\n    case \"percentCalculated\":\r\n      const percentCalculatedObject = calculatePercent(\r\n        state.historyOfOperationsArrayOfStrings,\r\n        state.mainValueString,\r\n        state.isEqualSignUsed,\r\n        state.result\r\n      );\r\n      return {\r\n        ...state,\r\n        mainValueString: percentCalculatedObject.bigString,\r\n        historyOfOperationsArrayOfStrings: percentCalculatedObject.smallArray,\r\n      };\r\n\r\n    //  backspace --- function to action\r\n    case \"lastCharacterDeleted\":\r\n      return {\r\n        ...state,\r\n        mainValueString: state.isError\r\n          ? \"0\"\r\n          : deleteLastCharacter.deleteLastCharacterFromBigDisplay(\r\n              state.mainValueString,\r\n              state.result\r\n            ),\r\n        historyOfOperationsArrayOfStrings: state.isError\r\n          ? []\r\n          : deleteLastCharacter.deleteSmallDisplay(\r\n              state.historyOfOperationsArrayOfStrings,\r\n              state.isEqualSignUsed\r\n            ),\r\n        isError: false,\r\n        isSignChanged: false,\r\n      };\r\n\r\n    // +/- --- function to action\r\n    case \"signChanged\":\r\n      const signChangedObject = changeSign(\r\n        state.mainValueString,\r\n        state.historyOfOperationsArrayOfStrings\r\n      );\r\n      return {\r\n        ...state,\r\n        mainValueString: signChangedObject.bigString,\r\n        historyOfOperationsArrayOfStrings:\r\n          signChangedObject.smallArray !== null\r\n            ? signChangedObject.smallArray\r\n            : state.historyOfOperationsArrayOfStrings,\r\n        isSignChanged: signChangedObject.isSignChanged,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { createStore } from \"redux\";\r\nimport { rootReducer } from \"./reducers/index\";\r\n\r\nconst store = createStore(rootReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.scss\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./store\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}